{
    "swagger": "2.0",
    "info": {
        "version": "V9.5",
        "title": "Sdl.Tridion.ContentManager.OpenApi",
        "x-swagger-net-version": "8.3.23.103"
    },
    "host": "dxui-dev.global.sdl.corp:7086",
    "basePath": "/OpenApi",
    "schemes": [
        "http"
    ],
    "paths": {
        "/api/v{api-version}/cm/applicationids": {
            "get": {
                "tags": [
                    "ApplicationData"
                ],
                "summary": "Fetches all Application Id's.",
                "description": "",
                "operationId": "GetApplicationIds",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/appdata/{itemId}": {
            "get": {
                "tags": [
                    "ApplicationData"
                ],
                "summary": "Fetches an Item's ApplicationData for all Applications.",
                "description": "",
                "operationId": "GetApplicationData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ApplicationData"
                            },
                            "xml": {
                                "name": "ApplicationData",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "put": {
                "tags": [
                    "ApplicationData"
                ],
                "summary": "Updates an Item's ApplicationData for a specific Application.",
                "description": "",
                "operationId": "SaveAppData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationDataDtos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ApplicationData"
                            },
                            "xml": {
                                "name": "ApplicationData",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/appdata/{itemId}/{applicationId}": {
            "post": {
                "tags": [
                    "ApplicationData"
                ],
                "summary": "Fetches an Item's ApplicationData for a specific Application.",
                "description": "",
                "operationId": "GetApplicationDataForApplication",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "description": "The id of an Application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ApplicationData"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/appdata/multiple": {
            "post": {
                "tags": [
                    "ApplicationData"
                ],
                "summary": "Fetches ApplicationData for multiple Items and Applications.",
                "description": "",
                "operationId": "GetApplicationDataForMultipleSubjectsAndAppIds",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MultiSubjectMultiAppDataRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "additionalProperties": {
                                "items": {
                                    "$ref": "#/definitions/ApplicationData"
                                },
                                "xml": {
                                    "name": "ApplicationData",
                                    "wrapped": true
                                },
                                "type": "array"
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/appdata/{itemId}/{applicationId}/delete": {
            "post": {
                "tags": [
                    "ApplicationData"
                ],
                "summary": "Deletes an Item's ApplicationData for a specific Application.",
                "description": "",
                "operationId": "DeleteApplicationData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "applicationId",
                        "in": "path",
                        "description": "The id of an Application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/appdata/purge/{applicationId}": {
            "post": {
                "tags": [
                    "ApplicationData"
                ],
                "summary": "Remove all ApplicationData in the system for a given Application.",
                "description": "",
                "operationId": "PurgeApplicationData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "applicationId",
                        "in": "path",
                        "description": "The id of an Application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/checkin": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Checks in a batch of items.",
                "description": "",
                "operationId": "BatchCheckIn",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchCheckinRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/checkout": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Checks out a batch of items.",
                "description": "",
                "operationId": "BatchCheckIn",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationWithLockingRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/classify": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Classifies a batch of items.",
                "description": "",
                "operationId": "BatchClassify",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchClassifyOrUnClassifyRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/copy": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Copies a batch of items.",
                "description": "",
                "operationId": "BatchCopy",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchCopyRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/copytokeyword": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "",
                "description": "",
                "operationId": "BatchCopyToKeyword",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchCopyOrMoveRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/delete": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Deletes a batch of items.",
                "description": "",
                "operationId": "BatchDelete",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/deletetaxonomynode": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Deletes a batch of taxonomy nodes.",
                "description": "",
                "operationId": "BatchDeleteTaxonomyNode",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchDeleteTaxonomyNodeRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/demote": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Demotes a batch of items.",
                "description": "",
                "operationId": "BatchDemote",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchPromoteDemoteRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/finishactivity": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Finishes a batch of activities.",
                "description": "",
                "operationId": "BatchFinishActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchFinishActivityRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/forcefinishprocess": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Forces a batch of processes to finish.",
                "description": "",
                "operationId": "BatchForceFinishProcess",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchForceFinishRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/localize": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Localizes a batch of items.",
                "description": "",
                "operationId": "BatchLocalize",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/move": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Moves a batch of items.",
                "description": "",
                "operationId": "BatchMove",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchCopyOrMoveRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/movetokeyword": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "",
                "description": "",
                "operationId": "BatchMoveToKeyword",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchCopyOrMoveRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/promote": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Promotes a batch of items.",
                "description": "",
                "operationId": "BatchPromote",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchPromoteDemoteRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/publish": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Publishes a batch of items.",
                "description": "",
                "operationId": "BatchPublish",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchPublishRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/reassignactivity": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Reassignes a batch of activities.",
                "description": "",
                "operationId": "BatchReAssignActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchReAssignActivityRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/reclassify": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Reclassifies a batch of items.",
                "description": "",
                "operationId": "BatchReclassify",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchReClassifyRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/restartactivity": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Restarts a batch of activities.",
                "description": "",
                "operationId": "RestartActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/resumeactivity": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Resumes a batch of activities.",
                "description": "",
                "operationId": "BatchResumeActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/startactivity": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Starts a batch of activities.",
                "description": "",
                "operationId": "BatchStartActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/suspendactivity": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Suspends a batch of activities.",
                "description": "",
                "operationId": "BatchSuspendActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchSuspendActivityRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/switchuserenabledstate": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Switches the enabled state for a batch of Users.",
                "description": "",
                "operationId": "BatchSwitchUserEnabledState",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchSwitchUserEnabledStateRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/synchronizewithschemaandupdate": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "",
                "description": "",
                "operationId": "BatchSynchronizeWithSchemaAndUpdate",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchSynchronizeSchemaRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/unclassify": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Unclassifies a batch of items.",
                "description": "",
                "operationId": "BatchUnClassify",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchClassifyOrUnClassifyRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/undocheckout": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Undo the checkout of a batch of items.",
                "description": "",
                "operationId": "BatchUndoCheckOut",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationWithLockingRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/unlocalize": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Unlocalizes a batch of items.",
                "description": "",
                "operationId": "BatchUnLocalize",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchOperationRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/batch/unpublish": {
            "post": {
                "tags": [
                    "BatchOperations"
                ],
                "summary": "Unpublishes a batch of items.",
                "description": "",
                "operationId": "BatchUnPublish",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BatchUnPublishRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/binary/upload": {
            "post": {
                "tags": [
                    "Binaries"
                ],
                "summary": "Upload one or more binaries as multipart content.",
                "description": "",
                "operationId": "Upload",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/binary/uploadbytes/{fileName}": {
            "post": {
                "tags": [
                    "Binaries"
                ],
                "description": "",
                "operationId": "UploadBytes",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "The name of the file.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "bytes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/binary/uploadbytesasync/{fileName}": {
            "post": {
                "tags": [
                    "Binaries"
                ],
                "summary": "Upload a binary (asynchronous).",
                "description": "",
                "operationId": "UploadBytesAsync",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "The name of the file.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/binary/{itemIdOrTempFileId}": {
            "get": {
                "tags": [
                    "Binaries"
                ],
                "summary": "Download a binary.",
                "description": "",
                "operationId": "DownloadBinaryContent",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemIdOrTempFileId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/binary": {
            "get": {
                "tags": [
                    "Binaries"
                ],
                "summary": "Download a binary.",
                "description": "",
                "operationId": "DownloadBinaryContent",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": 0
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/blueprintcontext": {
            "get": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Fetch the blueprint context of an Item in the Blueprint hierarchy.",
                "description": "",
                "operationId": "BlueprintContext",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/BlueprintItemDescriptor"
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/blueprintcontextoverrides": {
            "get": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Gets the blueprint context overrides for a Publication.",
                "description": "Blueprint context overrides can be used to save components or pages to different publications (blueprint contexts).",
                "operationId": "BlueprintContextOverrides",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/BlueprintContextOverrides"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "put": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Updates the blueprint context overrides for a Publication.",
                "description": "Blueprint context overrides can be used to save components or pages to different publications (blueprint contexts).",
                "operationId": "BlueprintContextOverrides",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "blueprintContextOverrides",
                        "in": "body",
                        "description": "Specification of alternate publications where components and pages are stored.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BlueprintContextOverrides"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/BlueprintContextOverrides"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/blueprinthierarchy": {
            "get": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Gets the blueprint hierarchy.",
                "description": "",
                "operationId": "BlueprintHierarchy",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/BlueprintNodeDescriptor"
                            },
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/demote": {
            "post": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Demotes an Item in the Blueprint.",
                "description": "",
                "operationId": "DemoteRepositoryLocalObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PromoteDemoteRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/OperationResult"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/promote": {
            "post": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Promotes an Item in the Blueprint.",
                "description": "",
                "operationId": "PromoteRepositoryLocalObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PromoteDemoteRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/OperationResult"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/localize": {
            "post": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Localizes an Item in the Blueprint.",
                "description": "This operation returns an implementation of the abstract type 'RepositoryLocalObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Keyword</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionProcessDefinition</span></li><li><span>VirtualFolder</span></li></ul>",
                "operationId": "LocalizeRepositoryLocalObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/RepositoryLocalObject"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/unlocalize": {
            "post": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "UnLocalizes an Item in the Blueprint.",
                "description": "This operation returns an implementation of the abstract type 'RepositoryLocalObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Keyword</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionProcessDefinition</span></li><li><span>VirtualFolder</span></li></ul>",
                "operationId": "UnLocalizeRepositoryLocalObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/RepositoryLocalObject"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/fasttrackpublishing/preview/{targetTypeOrPublicationTargetId}": {
            "post": {
                "tags": [
                    "FastTrackPublishing"
                ],
                "summary": "Triggers Fast Track Publishing preview.",
                "description": "Fast Track Publishing can only be triggered for target types or publication targets.",
                "operationId": "FastTrackPublish",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "targetTypeOrPublicationTargetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "publishedItemInfos",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublishedItemInfo"
                            },
                            "xml": {
                                "name": "PublishedItemInfo",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/fasttrackpublishing/resolvepublishingtarget": {
            "post": {
                "tags": [
                    "FastTrackPublishing"
                ],
                "summary": "Resolves a URL to a publishing target.",
                "description": "",
                "operationId": "ResolvePublishingTarget",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "siteUrl",
                        "in": "body",
                        "description": "The URL of a website.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/healthcheck": {
            "get": {
                "tags": [
                    "HealthCheck"
                ],
                "summary": "View the health status of the API.",
                "description": "",
                "operationId": "HealthCheck",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ApiStatus"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}": {
            "get": {
                "tags": [
                    "Item"
                ],
                "summary": "Fetches an item.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "FetchIdentifableObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "useDynamicVersion",
                        "in": "query",
                        "description": "Loads a dynamic version (if available for your user).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "useBlueprintContextOverridesIfAvailable",
                        "in": "query",
                        "description": "Loads the item using blueprint content override settings (if applicable).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "put": {
                "tags": [
                    "Item"
                ],
                "summary": "Updates an existing item.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "UpdateIdentifableObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    {
                        "name": "useBlueprintContextOverridesIfAvailable",
                        "in": "query",
                        "description": "Loads the item using blueprint content override settings (if applicable).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Item"
                ],
                "summary": "Deletes an item.",
                "description": "",
                "operationId": "DeleteIdentifableObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/items": {
            "get": {
                "tags": [
                    "Item"
                ],
                "summary": "Fetches one or more items based on the Id's provided in the querystring.",
                "description": "",
                "operationId": "FetchIdentifableObjects",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemIds",
                        "in": "query",
                        "description": "A list of (escaped) TCM item id's.",
                        "required": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/validate": {
            "post": {
                "tags": [
                    "Item"
                ],
                "summary": "Validates the state of an IdentifiableObjectData delta object.",
                "description": "",
                "operationId": "ValidateIdentifableObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ValidationError"
                            },
                            "xml": {
                                "name": "ValidationError",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item": {
            "post": {
                "tags": [
                    "Item"
                ],
                "summary": "Creates an item.",
                "description": "",
                "operationId": "CreateIdentifableObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "The request has completed and has resulted in one or more new resources being created.",
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/exists": {
            "get": {
                "tags": [
                    "Item"
                ],
                "summary": "Checks if an item exists.",
                "description": "",
                "operationId": "ItemExists",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/defaultdata/{itemType}/{containerUri}": {
            "get": {
                "tags": [
                    "Item"
                ],
                "summary": "Returns a default data type for the given Item Type and Container Id.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "GetDefaultData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemType",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "containerUri",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/copy/{destinationUri}": {
            "put": {
                "tags": [
                    "Item"
                ],
                "summary": "Copies a RepositoryLocalObject.",
                "description": "This operation returns an implementation of the abstract type 'RepositoryLocalObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Keyword</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionProcessDefinition</span></li><li><span>VirtualFolder</span></li></ul>",
                "operationId": "CopyRepositoryLocalObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "destinationId",
                        "in": "query",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "makeUnique",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "destinationUri",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/RepositoryLocalObject"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/move/{destinationUri}": {
            "put": {
                "tags": [
                    "Item"
                ],
                "summary": "Moves a RepositoryLocalObject.",
                "description": "This operation returns an implementation of the abstract type 'RepositoryLocalObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Keyword</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionProcessDefinition</span></li><li><span>VirtualFolder</span></li></ul>",
                "operationId": "MoveRepositoryLocalObject",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "destinationUri",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/RepositoryLocalObject"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/templatetypes/{itemType}": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "List all Template Types.",
                "description": "",
                "operationId": "GetTemplateTypes",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemType",
                        "in": "path",
                        "required": true,
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TemplateType"
                            },
                            "xml": {
                                "name": "TemplateType",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publicationtypes": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets a list of Publication Types.",
                "description": "",
                "operationId": "GetPublicationTypes",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublicationType"
                            },
                            "xml": {
                                "name": "PublicationType",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/systemprivileges": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets a list of System Priviliges.",
                "description": "",
                "operationId": "GetSystemPrivileges",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/SystemPrivilege"
                            },
                            "xml": {
                                "name": "SystemPrivilege",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/systemwidelist": {
            "post": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets a system wide list.",
                "description": "Use an implementation of the abstract SystemWideListFilter (for example a 'MultimediaTypesFilter' to get specific item types.",
                "operationId": "GetSystemWideListData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "The filter to apply to the output.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SystemWideListFilter"
                        }
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/listdata/{itemId}": {
            "post": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets a list of related items.",
                "description": "",
                "operationId": "GetListData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "The filter to apply to the output.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubjectRelatedListFilter"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/list/{itemId}": {
            "post": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets a list of related items.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "GetList",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "The filter to apply to the output.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubjectRelatedListFilter"
                        }
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/classifieditems": {
            "get": {
                "tags": [
                    "OrganizationalItems"
                ],
                "summary": "Gets a list of classified items.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "ClassifiedItems",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "useDynamicVersion",
                        "in": "query",
                        "description": "Loads a dynamic version (if available for your user).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "itemType",
                        "in": "query",
                        "required": false,
                        "items": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "None",
                                "Publication",
                                "Folder",
                                "StructureGroup",
                                "Schema",
                                "Component",
                                "ComponentTemplate",
                                "Page",
                                "PageTemplate",
                                "TargetGroup",
                                "Category",
                                "Keyword",
                                "TemplateBuildingBlock",
                                "BusinessProcessType",
                                "VirtualFolder",
                                "PublicationTarget",
                                "TargetType",
                                "TargetDestination",
                                "MultimediaType",
                                "User",
                                "Group",
                                "DirectoryService",
                                "DirectoryGroupMapping",
                                "Batch",
                                "MultipleOperations",
                                "PublishTransaction",
                                "WorkflowType",
                                "ApprovalStatus",
                                "ProcessDefinition",
                                "ProcessInstance",
                                "ProcessHistory",
                                "ActivityDefinition",
                                "ActivityInstance",
                                "ActivityHistory",
                                "WorkItem"
                            ]
                        },
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "resolveDescendantKeywords",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/items": {
            "get": {
                "tags": [
                    "OrganizationalItems"
                ],
                "summary": "Gets a list of child items.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "Items",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "useDynamicVersion",
                        "in": "query",
                        "description": "Loads a dynamic version (if available for your user).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "itemType",
                        "in": "query",
                        "required": false,
                        "items": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "None",
                                "Publication",
                                "Folder",
                                "StructureGroup",
                                "Schema",
                                "Component",
                                "ComponentTemplate",
                                "Page",
                                "PageTemplate",
                                "TargetGroup",
                                "Category",
                                "Keyword",
                                "TemplateBuildingBlock",
                                "BusinessProcessType",
                                "VirtualFolder",
                                "PublicationTarget",
                                "TargetType",
                                "TargetDestination",
                                "MultimediaType",
                                "User",
                                "Group",
                                "DirectoryService",
                                "DirectoryGroupMapping",
                                "Batch",
                                "MultipleOperations",
                                "PublishTransaction",
                                "WorkflowType",
                                "ApprovalStatus",
                                "ProcessDefinition",
                                "ProcessInstance",
                                "ProcessHistory",
                                "ActivityDefinition",
                                "ActivityInstance",
                                "ActivityHistory",
                                "WorkItem"
                            ]
                        },
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/uses": {
            "get": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Gets a list of items that are used by a specific item.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "Uses",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "filter.$type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.baseColumns",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Id",
                            "IdAndTitle",
                            "Default",
                            "Extended"
                        ]
                    },
                    {
                        "name": "filter.extensionProperties",
                        "in": "query",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "name": "filter.includeAllowedActionsColumns",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.includeBlueprintParentItem",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.includeExternalLinks",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.inRepository.idRef",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.title",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.$type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.webDavUrl",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.itemTypes",
                        "in": "query",
                        "required": false,
                        "items": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "None",
                                "Publication",
                                "Folder",
                                "StructureGroup",
                                "Schema",
                                "Component",
                                "ComponentTemplate",
                                "Page",
                                "PageTemplate",
                                "TargetGroup",
                                "Category",
                                "Keyword",
                                "TemplateBuildingBlock",
                                "BusinessProcessType",
                                "VirtualFolder",
                                "PublicationTarget",
                                "TargetType",
                                "TargetDestination",
                                "MultimediaType",
                                "User",
                                "Group",
                                "DirectoryService",
                                "DirectoryGroupMapping",
                                "Batch",
                                "MultipleOperations",
                                "PublishTransaction",
                                "WorkflowType",
                                "ApprovalStatus",
                                "ProcessDefinition",
                                "ProcessInstance",
                                "ProcessHistory",
                                "ActivityDefinition",
                                "ActivityInstance",
                                "ActivityHistory",
                                "WorkItem"
                            ]
                        },
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "filter.sortExpression",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/usedby": {
            "get": {
                "tags": [
                    "Blueprinting"
                ],
                "summary": "Gets a list of items that use a specific item.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "UsedBy",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "filter.$type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.baseColumns",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Id",
                            "IdAndTitle",
                            "Default",
                            "Extended"
                        ]
                    },
                    {
                        "name": "filter.excludeTaxonomyRelations",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.extensionProperties",
                        "in": "query",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "name": "filter.includeAllowedActionsColumns",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.includedVersions",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "AllVersions",
                            "OnlyLatestVersions",
                            "OnlyLatestAndCheckedOutVersions"
                        ]
                    },
                    {
                        "name": "filter.includeLocalCopies",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.includeVersionsColumn",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "filter.inRepository.idRef",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.title",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.$type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.description",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.inRepository.webDavUrl",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter.itemTypes",
                        "in": "query",
                        "required": false,
                        "items": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "None",
                                "Publication",
                                "Folder",
                                "StructureGroup",
                                "Schema",
                                "Component",
                                "ComponentTemplate",
                                "Page",
                                "PageTemplate",
                                "TargetGroup",
                                "Category",
                                "Keyword",
                                "TemplateBuildingBlock",
                                "BusinessProcessType",
                                "VirtualFolder",
                                "PublicationTarget",
                                "TargetType",
                                "TargetDestination",
                                "MultimediaType",
                                "User",
                                "Group",
                                "DirectoryService",
                                "DirectoryGroupMapping",
                                "Batch",
                                "MultipleOperations",
                                "PublishTransaction",
                                "WorkflowType",
                                "ApprovalStatus",
                                "ProcessDefinition",
                                "ProcessInstance",
                                "ProcessHistory",
                                "ActivityDefinition",
                                "ActivityInstance",
                                "ActivityHistory",
                                "WorkItem"
                            ]
                        },
                        "collectionFormat": "multi",
                        "type": "array"
                    },
                    {
                        "name": "filter.sortExpression",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/inbundles": {
            "get": {
                "tags": [
                    "OrganizationalItems"
                ],
                "summary": "Gets a list of bundles a specific item is in.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "InBundles",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "containingBundlesFilterDto.$type",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "containingBundlesFilterDto.baseColumns",
                        "in": "query",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Id",
                            "IdAndTitle",
                            "Default",
                            "Extended"
                        ]
                    },
                    {
                        "name": "containingBundlesFilterDto.extensionProperties",
                        "in": "query",
                        "required": false,
                        "type": "object"
                    },
                    {
                        "name": "containingBundlesFilterDto.includeAllowedActionsColumns",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "containingBundlesFilterDto.includeBundleTypeColumns",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "containingBundlesFilterDto.includeDescriptionColumn",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "containingBundlesFilterDto.onlySpecifiedBluePrintVariant",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "name": "containingBundlesFilterDto.sortExpression",
                        "in": "query",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "containingBundlesFilterDto.suppressLocalCopies",
                        "in": "query",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/processdefinitions": {
            "get": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Gets a list of Process Definitions for a specific item.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "ProcessDefinitions",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publications": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets a list of Publications.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "Publications",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/checkedoutitems": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets all items that are checked out.",
                "description": "This operation is for Administrators. Normally users are only able to retrieve items that are checked out by themselves.",
                "operationId": "GetCheckedOutItems",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "useDynamicVersion",
                        "in": "query",
                        "description": "Loads a dynamic version (if available for your user).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/checkedoutitems/{userId}": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets the items that are checked out by a given user.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "GetCheckedOutItemsForUser",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a User.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "useDynamicVersion",
                        "in": "query",
                        "description": "Loads a dynamic version (if available for your user).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/organizationalstructuretree/{itemId}": {
            "get": {
                "tags": [
                    "Lists"
                ],
                "summary": "Gets an (expanded) tree representation of all the items in the path of a RepositoryLocalObject.",
                "description": "",
                "operationId": "GetOrganizationalStructureTree",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "includeAllPublications",
                        "in": "query",
                        "description": "Include all publications (and not just the context publication).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "includeChildrenOnEveryLevel",
                        "in": "query",
                        "description": "Include children of all items in the path.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "groupCategoriesAndKeywords",
                        "in": "query",
                        "description": "Group categories and keywords in a single treenode.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "groupBusinessProcessTypes",
                        "in": "query",
                        "description": "Group all business process types in a single treenode.",
                        "required": false,
                        "type": "boolean",
                        "default": true
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/TreeNode"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/orgitem/{organizationalItemId}/lock": {
            "get": {
                "tags": [
                    "OrganizationalItems"
                ],
                "summary": "Locks an organizational item.",
                "description": "This operation returns an implementation of the abstract type 'OrganizationalItem'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Folder</span></li><li><span>ResolvedBundle</span></li><li><span>StructureGroup</span></li><li><span>VirtualFolder</span></li></ul>",
                "operationId": "LockOrganizationalItem",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationalItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an OrganizationalItem.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/OrganizationalItem"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/orgitem/{organizationalItemId}/unlock": {
            "get": {
                "tags": [
                    "OrganizationalItems"
                ],
                "summary": "Unlocks an organizational item.",
                "description": "This operation returns an implementation of the abstract type 'OrganizationalItem'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Folder</span></li><li><span>ResolvedBundle</span></li><li><span>StructureGroup</span></li><li><span>VirtualFolder</span></li></ul>",
                "operationId": "UnLockOrganizationalItem",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "organizationalItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an OrganizationalItem.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/OrganizationalItem"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/publish/{targetIdOrPurpose}": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Publish items.",
                "description": "",
                "operationId": "PublishItem",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "targetIdOrPurpose",
                        "in": "path",
                        "description": "The id of a publishing target.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PublishInstruction"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublishTransaction"
                            },
                            "xml": {
                                "name": "PublishTransaction",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/publish": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Publish items.",
                "description": "",
                "operationId": "Publish",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PublishRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublishTransaction"
                            },
                            "xml": {
                                "name": "PublishTransaction",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/unpublish/{targetIdOrPurpose}": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Unpublish items.",
                "description": "",
                "operationId": "UnPublishItem",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "targetIdOrPurpose",
                        "in": "path",
                        "description": "The id of a publishing target.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnPublishInstruction"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublishTransaction"
                            },
                            "xml": {
                                "name": "PublishTransaction",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/unpublish": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Unpublish items.",
                "description": "",
                "operationId": "UnPublish",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UnPublishRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublishTransaction"
                            },
                            "xml": {
                                "name": "PublishTransaction",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/publishedto": {
            "get": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Gets a list of publish information for each target the item was published to.",
                "description": "",
                "operationId": "PublishedTo",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublishInfo"
                            },
                            "xml": {
                                "name": "PublishInfo",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/ispublished": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Checks if an item is published.",
                "description": "",
                "operationId": "IsPublished",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IsPublishedRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully published",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/transactions": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Gets PublishTransactions.",
                "description": "",
                "operationId": "GetPublishTransactionData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "publishTransactionsFilter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PublishTransactionsFilter"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/PublishTransaction"
                            },
                            "xml": {
                                "name": "PublishTransaction",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/decommission/{publicationTargetId}": {
            "delete": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Decommissions a publication target.",
                "description": "",
                "operationId": "Decommission",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "publicationTargetId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a PublicationTarget.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/removepublishstates": {
            "delete": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Removes publish states.",
                "description": "",
                "operationId": "RemovePublishStates",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemovePublishStateRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/publishurl": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Gets the url where an item is published.",
                "description": "",
                "operationId": "GetPublishUrl",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PublishedUrlRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/businessprocesstypes/{topologyTypeId}": {
            "get": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Gets BusinessProcessTypes.",
                "description": "",
                "operationId": "GetBusinessProcessTypes",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "topologyTypeId",
                        "in": "path",
                        "description": "The id of a Topology type.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/publishing/publishsourcebyurl": {
            "post": {
                "tags": [
                    "Publishing"
                ],
                "summary": "Resolves a publish source.",
                "description": "",
                "operationId": "GetPublishSourceByUrl",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "url",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/PublishSource"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/queues/messages/{messageQueueId}": {
            "get": {
                "tags": [
                    "Queues"
                ],
                "summary": "Get a list of QueueMessages.",
                "description": "",
                "operationId": "GetListQueueMessages",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "messageQueueId",
                        "in": "path",
                        "description": "The id of a message queue.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/QueueMessage"
                            },
                            "xml": {
                                "name": "QueueMessage",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/queues/queuename/{messageQueueId}": {
            "get": {
                "tags": [
                    "Queues"
                ],
                "summary": "Get the name of a predefined queue.",
                "description": "",
                "operationId": "GetPredefinedQueueName",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "messageQueueId",
                        "in": "path",
                        "description": "The id of a message queue.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "PublishQueue",
                                "DeployQueue",
                                "SearchQueue",
                                "WorkflowAgentQueue",
                                "BatchQueue"
                            ]
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/queues/list": {
            "get": {
                "tags": [
                    "Queues"
                ],
                "summary": "Gets a list of queues.",
                "description": "",
                "operationId": "GetListQueues",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Queue"
                            },
                            "xml": {
                                "name": "Queue",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/queues/purge/{messageQueueId}": {
            "post": {
                "tags": [
                    "Queues"
                ],
                "summary": "Purges a queue.",
                "description": "",
                "operationId": "PurgeQueue",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "messageQueueId",
                        "in": "path",
                        "description": "The id of a message queue.",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/render": {
            "post": {
                "tags": [
                    "Rendering"
                ],
                "summary": "Renders an item.",
                "description": "",
                "operationId": "RenderItem",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RenderRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/RenderedItem"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/preview": {
            "post": {
                "tags": [
                    "Rendering"
                ],
                "summary": "Renders a preview of an item.",
                "description": "",
                "operationId": "PreviewItem",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PreviewRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/RenderedItem"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workitemsnapshot/{workItemId}": {
            "get": {
                "tags": [
                    "Rendering"
                ],
                "summary": "Gets a work item snapshot for the given workitem Id.",
                "description": "",
                "operationId": "GetWorkItemSnapshot",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "workItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a work item.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/RenderedItem"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{schemaId}/instancedata/{containerItemId}": {
            "get": {
                "tags": [
                    "Schemas"
                ],
                "summary": "Gets the instance data of a Schema with default field values.",
                "description": "",
                "operationId": "GetSchemaInstanceData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "schemaId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "containerItemId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/SchemaInstance"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/schemas/bynamespace/{repositoryId}/{xmlNamespaceUri}/{rootElementName}": {
            "get": {
                "tags": [
                    "Schemas"
                ],
                "summary": "Gets a list of schema's by namespace Uri.",
                "description": "",
                "operationId": "GetSchemasByNamespaceUri",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "repositoryId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a Repository.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "xmlNamespaceUri",
                        "in": "path",
                        "description": "The uri of a XML namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rootElementName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/schemas/virtualfoldertype/{xmlNamespaceUri}": {
            "get": {
                "tags": [
                    "Schemas"
                ],
                "summary": "Gets the type schema of a Virtual Folder for the specified namespace Uri.",
                "description": "",
                "operationId": "GetVirtualFolderTypeSchema",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "xmlNamespaceUri",
                        "in": "path",
                        "description": "The uri of a XML namespace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/Schema"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/synchronizewithschemaandupdate": {
            "put": {
                "tags": [
                    "Schemas"
                ],
                "summary": "Synchronizes content and/or metadata of an item with current schema.",
                "description": "Using this operation will also persist the changes made through synchronization.",
                "operationId": "SynchronizeWithSchemaAndUpdate",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "synchronizeflags",
                        "in": "query",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/SynchronizationResult"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{itemId}/synchronizewithschema": {
            "post": {
                "tags": [
                    "Schemas"
                ],
                "summary": "Synchronizes content and/or metadata of an item with current schema.",
                "description": "Using this operation will not persist the changes made through synchronization.",
                "operationId": "SynchronizeWithSchema",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an Item. Can be a Component, Folder, Schema or any other kind of object that is identifiable with a TcmUri.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "identifiableObject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IdentifiableObject"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "synchronizeflags",
                        "in": "query",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/SynchronizationResult"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/search": {
            "get": {
                "tags": [
                    "Search"
                ],
                "summary": "",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "BasicFullTextSearch",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "searchQuery",
                        "in": "query",
                        "description": "Text to search on.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startRow",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    {
                        "name": "max",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    {
                        "name": "maxSearchResults",
                        "in": "query",
                        "description": "The maximum numer of search results.",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Full search.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "Search",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchQuery"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    {
                        "name": "max",
                        "in": "query",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "default": -1
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/search/reindex/{repositoryId}": {
            "post": {
                "tags": [
                    "Search"
                ],
                "summary": "Reindexes a Tridion repository.",
                "description": "When no repositoryId is provided, all repositories will be reindexed.",
                "operationId": "Reindex",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "repositoryId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a Repository.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/itemidsforappdata/{applicationId}": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Gets a list of itemIds which have application data of the specified applicationId.",
                "description": "",
                "operationId": "GetItemIdsWithApplicationData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "applicationId",
                        "in": "path",
                        "description": "The id of an Application.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/systemwidelist": {
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Gets a system wide list.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "GetSystemWideList",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "The filter to apply to the output.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SystemWideListFilter"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/systemxsd/{fileName}": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Gets a system xsd.",
                "description": "",
                "operationId": "GetSystemXsd",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fileName",
                        "in": "path",
                        "description": "The name of the file.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/purgeoldversions": {
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Purges old versions of items.",
                "description": "",
                "operationId": "PurgeOldVersions",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurgeOldVersionsInstruction"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/tridionlanguages": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Gets available languages.",
                "description": "",
                "operationId": "GetTridionLanguages",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/TridionLanguageInfo"
                            },
                            "xml": {
                                "name": "TridionLanguageInfo",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/directoryserviceusers/{directoryServiceName}": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Gets a list of DirectoryServiceUsers.",
                "description": "",
                "operationId": "GetListDirectoryServiceUsers",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "directoryServicesName",
                        "in": "query",
                        "description": "The name of a Directory service.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "directoryServiceName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DirectoryServiceUser"
                            },
                            "xml": {
                                "name": "DirectoryServiceUser",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "post": {
                "tags": [
                    "System"
                ],
                "summary": "Gets a filtered list of DirectoryServiceUsers.",
                "description": "",
                "operationId": "GetListDirectoryServiceUsersWithFilter",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "directoryServicesName",
                        "in": "query",
                        "description": "The name of a Directory service.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "body",
                        "description": "The filter to apply to the output.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TridionDirectoryUsersFilter"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "directoryServiceName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/DirectoryServiceUser"
                            },
                            "xml": {
                                "name": "DirectoryServiceUser",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/notify": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Sends a notification.",
                "description": "",
                "operationId": "SendNotification",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NotificationMessage"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/system/availablecultures": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Retrieves a list of available cultures.",
                "description": "",
                "operationId": "GetAvailableCultures",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "includeIncompleteCultures",
                        "in": "query",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/CultureInfo"
                            },
                            "xml": {
                                "name": "CultureInfo",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/userprofile/{userId}": {
            "get": {
                "tags": [
                    "UserProfile"
                ],
                "summary": "Get the UserProfile of a user.",
                "description": "",
                "operationId": "GetUserProfile",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a User.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "put": {
                "tags": [
                    "UserProfile"
                ],
                "summary": "Updates the UserProfile of a user.",
                "description": "The 'User' and 'Runtime' properties in the UserProfile cannot be updated through this operation.",
                "operationId": "UpdateUserProfile",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a User.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userProfileDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/userprofile/{userId}/avatar": {
            "get": {
                "tags": [
                    "UserProfile"
                ],
                "summary": "Gets the avatar of a user.",
                "description": "",
                "operationId": "GetUserAvatar",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a User.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "If-None-Match",
                        "in": "header",
                        "description": "HTTP Request Header",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        },
                        "headers": {
                            "ETag": {
                                "description": "HTTP Response Header",
                                "type": "string"
                            }
                        }
                    },
                    "304": {
                        "description": "The requested content was not modified."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "put": {
                "tags": [
                    "UserProfile"
                ],
                "summary": "Updates the avatar of a user.",
                "description": "The uploaded image will be resized to 256x256 px.",
                "operationId": "UpdateUserAvatar",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a User.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            },
            "delete": {
                "tags": [
                    "UserProfile"
                ],
                "summary": "Deletes the custom avatar of a user.",
                "description": "Deleting the custom avatar of a user will revert it to a default avatar.",
                "operationId": "DeleteUserAvatar",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a User.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful."
                    },
                    "304": {
                        "description": "The requested content was not modified."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/whoami": {
            "get": {
                "tags": [
                    "UserProfile"
                ],
                "summary": "Get the UserProfile of the logged in user.",
                "description": "",
                "operationId": "GetOwnUserProfile",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/UserProfile"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{versionedItemId}/checkout": {
            "post": {
                "tags": [
                    "Versioning"
                ],
                "summary": "Checks out a VersionedItem.",
                "description": "This operation returns an implementation of the abstract type 'VersionedItem'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>Schema</span></li><li><span>TemplateBuildingBlock</span></li></ul>",
                "operationId": "CheckoutVersionedItemData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "versionedItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a VersionedItem.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckInCheckOutRequest"
                        }
                    },
                    {
                        "name": "useBlueprintContextOverridesIfAvailable",
                        "in": "query",
                        "description": "Loads the item using blueprint content override settings (if applicable).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/VersionedItem"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{versionedItemId}/checkin": {
            "post": {
                "tags": [
                    "Versioning"
                ],
                "summary": "Checks in a VersionedItem.",
                "description": "This operation returns an implementation of the abstract type 'VersionedItem'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>Schema</span></li><li><span>TemplateBuildingBlock</span></li></ul>",
                "operationId": "CheckinVersionedItemData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "versionedItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a VersionedItem.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckInCheckOutRequest"
                        }
                    },
                    {
                        "name": "useBlueprintContextOverridesIfAvailable",
                        "in": "query",
                        "description": "Loads the item using blueprint content override settings (if applicable).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/VersionedItem"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{versionedItemId}/undocheckout": {
            "post": {
                "tags": [
                    "Versioning"
                ],
                "summary": "Reverts the checkout of a VersionedItem.",
                "description": "This operation returns an implementation of the abstract type 'VersionedItem'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>Schema</span></li><li><span>TemplateBuildingBlock</span></li></ul>",
                "operationId": "UndoCheckoutVersionedItemData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "versionedItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a VersionedItem.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckInCheckOutRequest"
                        }
                    },
                    {
                        "name": "useBlueprintContextOverridesIfAvailable",
                        "in": "query",
                        "description": "Loads the item using blueprint content override settings (if applicable).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/VersionedItem"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{versionedItemId}/rollback": {
            "post": {
                "tags": [
                    "Versioning"
                ],
                "summary": "Rolls back a VersionedItem to a previous version.",
                "description": "This operation returns an implementation of the abstract type 'VersionedItem'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>BundleType</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>Schema</span></li><li><span>TemplateBuildingBlock</span></li></ul>",
                "operationId": "RollBackVersionedItemData",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "versionedItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a VersionedItem.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RollBackRequest"
                        }
                    },
                    {
                        "name": "useBlueprintContextOverridesIfAvailable",
                        "in": "query",
                        "description": "Loads the item using blueprint content override settings (if applicable).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/VersionedItem"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/item/{versionedItemId}/history": {
            "get": {
                "tags": [
                    "Versioning"
                ],
                "summary": "Gets the history of a VersionedItem.",
                "description": "This operation returns an implementation of the abstract type 'IdentifiableObject'. Depending on the requested item, one of the following instances may be returned:\n\n<ul class=\"model-list\"><li><span>AccessToken</span></li><li><span>ActivityHistory</span></li><li><span>ActivityInstance</span></li><li><span>ApprovalStatus</span></li><li><span>Batch</span></li><li><span>BlueprintNode</span></li><li><span>BundleType</span></li><li><span>BusinessProcessType</span></li><li><span>Category</span></li><li><span>Component</span></li><li><span>ComponentTemplate</span></li><li><span>Folder</span></li><li><span>Group</span></li><li><span>Keyword</span></li><li><span>MultimediaType</span></li><li><span>Page</span></li><li><span>PageTemplate</span></li><li><span>ProcessDefinitionAssociation</span></li><li><span>ProcessHistory</span></li><li><span>ProcessInstance</span></li><li><span>Publication</span></li><li><span>PublishTransaction</span></li><li><span>Repository</span></li><li><span>ResolvedBundle</span></li><li><span>Schema</span></li><li><span>StructureGroup</span></li><li><span>TargetGroup</span></li><li><span>TargetType</span></li><li><span>TemplateBuildingBlock</span></li><li><span>TridionActivityDefinition</span></li><li><span>TridionProcessDefinition</span></li><li><span>User</span></li><li><span>VirtualFolder</span></li><li><span>WorkflowType</span></li><li><span>WorkItem</span></li></ul>",
                "operationId": "History",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "versionedItemId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a VersionedItem.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "listItemProperties",
                        "in": "query",
                        "description": "The properties to load for items in a list.",
                        "required": false,
                        "type": "string",
                        "default": 0,
                        "enum": [
                            "All",
                            "Id",
                            "IdAndTitle"
                        ]
                    },
                    {
                        "name": "useDynamicVersion",
                        "in": "query",
                        "description": "Loads a dynamic version (if available for your user).",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/IdentifiableObject"
                            },
                            "xml": {
                                "name": "IdentifiableObject",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/addtoworkflow/{activityInstanceId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Adds items to a workflow.",
                "description": "If item is a bundle, the bundle and all items in it will be added to workflow. In case of nested bundles, all\r\nnested items will be added to workflow as well (recursively).",
                "operationId": "AddToWorkflow",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "itemIds",
                        "in": "body",
                        "description": "A list of (escaped) TCM item id's.",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/WorkItem"
                            },
                            "xml": {
                                "name": "WorkItem",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/startworkflow/{repositoryId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Starts a Workflow.",
                "description": "",
                "operationId": "StartWorkflow",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "repositoryId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a Repository.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StartWorkflowInstruction"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ProcessInstance"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/removefromworkflow": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Removes given items from workflow.",
                "description": "If the item is a bundle, the bundle and all items in it will be removed from workflow. In case of nested bundles,\r\nall nested items will be removed from workflow as well (recursively),\r\nunless item is contained in another bundle that will remain in workflow.",
                "operationId": "RemoveFromWorkflow",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "itemIds",
                        "in": "body",
                        "description": "A list of (escaped) TCM item id's.",
                        "required": true,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/WorkItem"
                            },
                            "xml": {
                                "name": "WorkItem",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/forcefinishprocess/{processInstanceId}/{approvalStatusId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Forces finish of a Workflow process.",
                "description": "",
                "operationId": "ForceFinishProcess",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "processInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a ProcessInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "approvalStatusId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ApprovalStatus.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ProcessHistory"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/workflowscriptypes": {
            "get": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Gets a list of registered Workflow Script Types.",
                "description": "",
                "operationId": "GetListWorkflowScriptTypes",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/WorkflowScriptType"
                            },
                            "xml": {
                                "name": "WorkflowScriptType",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/processdefinitions": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Gets process definitions for items.",
                "description": "",
                "operationId": "GetProcessDefinitionsForItems",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "requestModel",
                        "in": "body",
                        "description": "The input model for this operation.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ProcessDefinitionsRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "additionalProperties": {
                                "$ref": "#/definitions/Link"
                            },
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/purgeworkflowhistory": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Purges Workflow history.",
                "description": "",
                "operationId": "PurgeWorkflowHistory",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "purgeWorkflowHistoryInstructionDto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurgeWorkflowHistoryInstruction"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing, but the processing has not been completed."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/startactivity/{activityInstanceId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Starts a Workflow activity.",
                "description": "",
                "operationId": "StartActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ActivityInstance"
                        }
                    },
                    "204": {
                        "description": "The request was succesful and there is no content in the body of the response."
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/reassignactivity/{activityInstanceId}/{userId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Reassigns a Workflow activity to another User.",
                "description": "",
                "operationId": "ReAssignActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The (escaped) TCM id of a User.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ActivityInstance"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/restartactivity/{activityInstanceId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Restarts a Workflow activity.",
                "description": "",
                "operationId": "RestartActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ActivityInstance"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/resumeactivity/{activityInstanceId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Resumes a Workflow activity.",
                "description": "",
                "operationId": "ResumeActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ActivityInstance"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/suspendactivity/{activityInstanceId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Suspends a Workflow activity.",
                "description": "",
                "operationId": "SuspendActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ActivityInstance"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/suspendandresumeactivity/{activityInstanceId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Suspends and resumes a Workflow activity at the given date.",
                "description": "",
                "operationId": "SuspendAndResumeActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "activityRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SuspendAndResumeActivityRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ActivityInstance"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        },
        "/api/v{api-version}/cm/workflow/finishactivity/{activityInstanceId}": {
            "post": {
                "tags": [
                    "Workflow"
                ],
                "summary": "Finishes a Workflow activity.",
                "description": "",
                "operationId": "FinishActivity",
                "consumes": [
                    "*/*",
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "activityInstanceId",
                        "in": "path",
                        "description": "The (escaped) TCM id of an ActivityInstance.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "activityFinishRequestModel",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActivityFinishRequest"
                        }
                    },
                    {
                        "name": "api-version",
                        "in": "path",
                        "description": "The version of the Api you wish to use.",
                        "required": true,
                        "type": "string",
                        "default": "9.5"
                    },
                    {
                        "name": "loadflags",
                        "in": "query",
                        "description": "None=0,WebDavUrls=1,KeywordXlinks=2,Expanded=4,IncludeAllowedActions=8,IncludeDynamicVersionInfo=16,ExpandLinks=32",
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "versionresolvingconditions",
                        "in": "query",
                        "description": "Never=0,CheckedOutByUser=1,ReservedAndRevisedByUser=2,AssignedToUser=4,ReadableByUser=15",
                        "required": false,
                        "type": "int"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The request was succesful.",
                        "schema": {
                            "$ref": "#/definitions/ActivityInstance"
                        }
                    },
                    "400": {
                        "description": "The request data is invalid."
                    },
                    "404": {
                        "description": "The requested resource doesn't exist."
                    },
                    "500": {
                        "description": "There was an unexpected error while handling the request."
                    }
                }
            }
        }
    },
    "definitions": {
        "ApplicationData": {
            "properties": {
                "$type": {
                    "example": "ApplicationData",
                    "type": "string"
                },
                "ApplicationId": {
                    "type": "string"
                },
                "Data": {
                    "type": "string",
                    "format": "byte"
                },
                "IsInherited": {
                    "type": "boolean"
                },
                "ManagedLinks": {
                    "$ref": "#/definitions/Link"
                },
                "OwningRepositoryId": {
                    "type": "string"
                },
                "TypeId": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ApplicationData"
            },
            "type": "object"
        },
        "Link": {
            "properties": {
                "IdRef": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "Link",
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "WebDavUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Link"
            },
            "type": "object"
        },
        "MultiSubjectMultiAppDataRequest": {
            "properties": {
                "ApplicationIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "SubjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "MultiSubjectMultiAppDataRequest"
            },
            "type": "object"
        },
        "BatchCheckinRequest": {
            "properties": {
                "SetOrRemoveRemovePermanentLock": {
                    "type": "boolean"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "UserComment": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BatchCheckinRequest"
            },
            "type": "object"
        },
        "WeakLink": {
            "properties": {
                "IdRef": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "WeakLink",
                    "type": "string"
                }
            },
            "xml": {
                "name": "WeakLink"
            },
            "type": "object"
        },
        "BatchOperationWithLockingRequest": {
            "properties": {
                "SetOrRemoveRemovePermanentLock": {
                    "type": "boolean"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchOperationWithLockingRequest"
            },
            "type": "object"
        },
        "BatchClassifyOrUnClassifyRequest": {
            "properties": {
                "KeywordIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchClassifyOrUnClassifyRequest"
            },
            "type": "object"
        },
        "BatchCopyRequest": {
            "properties": {
                "DestinationId": {
                    "type": "string"
                },
                "MakeUnique": {
                    "type": "boolean"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchCopyRequest"
            },
            "type": "object"
        },
        "BatchCopyOrMoveRequest": {
            "properties": {
                "DestinationId": {
                    "type": "string"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchCopyOrMoveRequest"
            },
            "type": "object"
        },
        "BatchOperationRequest": {
            "properties": {
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchOperationRequest"
            },
            "type": "object"
        },
        "BatchDeleteTaxonomyNodeRequest": {
            "properties": {
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "TaxonomyNodeMode": {
                    "type": "string",
                    "enum": [
                        "DeleteBranch",
                        "DeleteBranchIncludeChildPublications",
                        "RemoveParentFromChildren",
                        "AssignChildrenToGrandparents"
                    ]
                }
            },
            "xml": {
                "name": "BatchDeleteTaxonomyNodeRequest"
            },
            "type": "object"
        },
        "BatchPromoteDemoteRequest": {
            "properties": {
                "DestinationRepositoryId": {
                    "type": "string"
                },
                "Instruction": {
                    "$ref": "#/definitions/OperationInstruction"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchPromoteDemoteRequest"
            },
            "type": "object"
        },
        "OperationInstruction": {
            "properties": {
                "$type": {
                    "example": "OperationInstruction",
                    "type": "string"
                },
                "Mode": {
                    "type": "string",
                    "enum": [
                        "FailOnError",
                        "FailOnWarning"
                    ]
                }
            },
            "xml": {
                "name": "OperationInstruction"
            },
            "type": "object"
        },
        "BatchFinishActivityRequest": {
            "properties": {
                "ActivityFinishInfo": {
                    "$ref": "#/definitions/ActivityFinishInfo"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchFinishActivityRequest"
            },
            "type": "object"
        },
        "ActivityFinishInfo": {
            "properties": {
                "Message": {
                    "type": "string"
                },
                "NextActivityDueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "NextActivityTitle": {
                    "type": "string"
                },
                "NextAssignee": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "ActivityFinishInfo"
            },
            "type": "object"
        },
        "BatchForceFinishRequest": {
            "properties": {
                "ApprovalStatusId": {
                    "type": "string"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchForceFinishRequest"
            },
            "type": "object"
        },
        "BatchPublishRequest": {
            "properties": {
                "Priority": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Low",
                        "Normal",
                        "High"
                    ]
                },
                "PublishInstruction": {
                    "$ref": "#/definitions/PublishInstruction"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "TargetIdsOrPurposes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchPublishRequest"
            },
            "type": "object"
        },
        "PublishInstruction": {
            "properties": {
                "$type": {
                    "example": "PublishInstruction",
                    "type": "string"
                },
                "DeployAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "ExtensionXml": {
                    "type": "string"
                },
                "MaximumNumberOfRenderFailures": {
                    "type": "integer",
                    "format": "int32"
                },
                "RenderInstruction": {
                    "$ref": "#/definitions/RenderInstruction"
                },
                "ResolveInstruction": {
                    "$ref": "#/definitions/ResolveInstruction"
                },
                "RollbackOnFailure": {
                    "type": "boolean"
                },
                "StartAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "PublishInstruction"
            },
            "type": "object"
        },
        "RenderInstruction": {
            "properties": {
                "$type": {
                    "example": "RenderInstruction",
                    "type": "string"
                },
                "BinaryStoragePath": {
                    "type": "string"
                },
                "ExtensionXml": {
                    "type": "string"
                },
                "RenderMode": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Publish",
                        "PreviewStatic",
                        "PreviewDynamic"
                    ]
                }
            },
            "xml": {
                "name": "RenderInstruction"
            },
            "type": "object"
        },
        "ResolveInstruction": {
            "properties": {
                "$type": {
                    "example": "ResolveInstruction",
                    "type": "string"
                },
                "ExtensionXml": {
                    "type": "string"
                },
                "IncludeChildPublications": {
                    "type": "boolean"
                },
                "IncludeComponentLinks": {
                    "type": "boolean"
                },
                "IncludeDynamicVersion": {
                    "type": "boolean"
                },
                "IncludeWorkflow": {
                    "type": "boolean"
                },
                "Purpose": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Publish",
                        "UnPublish",
                        "RePublish"
                    ]
                },
                "StructureResolveOption": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "OnlyItems",
                        "OnlyStructure",
                        "ItemsAndStructure"
                    ]
                }
            },
            "xml": {
                "name": "ResolveInstruction"
            },
            "type": "object"
        },
        "BatchReAssignActivityRequest": {
            "properties": {
                "AssigneeId": {
                    "type": "string"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchReAssignActivityRequest"
            },
            "type": "object"
        },
        "BatchReClassifyRequest": {
            "properties": {
                "KeywordIdsToAdd": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "KeywordIdsToRemove": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchReClassifyRequest"
            },
            "type": "object"
        },
        "BatchSuspendActivityRequest": {
            "properties": {
                "Reason": {
                    "type": "string"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchSuspendActivityRequest"
            },
            "type": "object"
        },
        "BatchSwitchUserEnabledStateRequest": {
            "properties": {
                "IsEnabled": {
                    "type": "boolean"
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchSwitchUserEnabledStateRequest"
            },
            "type": "object"
        },
        "BatchSynchronizeSchemaRequest": {
            "properties": {
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SynchronizeOptions": {
                    "$ref": "#/definitions/TridionSynchronizeOptions"
                }
            },
            "xml": {
                "name": "BatchSynchronizeSchemaRequest"
            },
            "type": "object"
        },
        "TridionSynchronizeOptions": {
            "properties": {
                "LoadFlags": {
                    "type": "string",
                    "enum": [
                        "None",
                        "WebDavUrls",
                        "KeywordXlinks",
                        "Expanded",
                        "IncludeAllowedActions",
                        "IncludeDynamicVersionInfo",
                        "ExpandLinks"
                    ]
                },
                "SynchronizeFlags": {
                    "type": "string",
                    "enum": [
                        "Basic",
                        "FixNamespace",
                        "RemoveUnknownFields",
                        "RemoveAdditionalValues",
                        "ApplyDefaultValuesForMissingMandatoryFields",
                        "ApplyDefaultValuesForMissingNonMandatoryFields",
                        "ApplyFilterXsltToXhtmlFields",
                        "ConvertFieldType",
                        "All",
                        "UnknownByClient"
                    ]
                },
                "UseDynamicVersion": {
                    "type": "string",
                    "enum": [
                        "Never",
                        "CheckedOutByUser",
                        "ReservedAndRevisedByUser",
                        "AssignedToUser",
                        "ReadableByUser"
                    ]
                }
            },
            "xml": {
                "name": "TridionSynchronizeOptions"
            },
            "type": "object"
        },
        "BatchUnPublishRequest": {
            "properties": {
                "Priority": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Low",
                        "Normal",
                        "High"
                    ]
                },
                "SubjectOrActivityInstanceLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "TargetIdsOrPurposes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "UnPublishInstruction": {
                    "$ref": "#/definitions/UnPublishInstruction"
                }
            },
            "xml": {
                "name": "BatchUnPublishRequest"
            },
            "type": "object"
        },
        "UnPublishInstruction": {
            "properties": {
                "$type": {
                    "example": "UnPublishInstruction",
                    "type": "string"
                },
                "ExtensionXml": {
                    "type": "string"
                },
                "ResolveInstruction": {
                    "$ref": "#/definitions/ResolveInstruction"
                },
                "RollbackOnFailure": {
                    "type": "boolean"
                },
                "StartAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "UnPublishInstruction"
            },
            "type": "object"
        },
        "BlueprintItemDescriptor": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "BlueprintItemDescriptor",
                    "type": "string"
                },
                "ChildrenIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ContextRepositoryId": {
                    "type": "string"
                },
                "ContextRepositoryTitle": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "IsLocalized": {
                    "type": "boolean"
                },
                "IsRoot": {
                    "type": "boolean"
                },
                "IsShared": {
                    "type": "boolean"
                },
                "OwningRepositoryId": {
                    "type": "string"
                },
                "OwningRepositoryTitle": {
                    "type": "string"
                },
                "ParentItemId": {
                    "type": "string"
                },
                "ParentRepositoryId": {
                    "type": "string"
                },
                "ParentRepositoryTitle": {
                    "type": "string"
                },
                "PrimaryBluePrintParentItemId": {
                    "type": "string"
                },
                "PrimaryBluePrintParentItemTitle": {
                    "type": "string"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "BlueprintItemDescriptorType",
            "xml": {
                "name": "BlueprintItemDescriptor"
            },
            "type": "object"
        },
        "BlueprintContextOverrides": {
            "properties": {
                "$type": {
                    "example": "BlueprintContextOverrides",
                    "type": "string"
                },
                "AlternatePublicationForComponents": {
                    "type": "string"
                },
                "AlternatePublicationForPages": {
                    "type": "string"
                },
                "PublicationId": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BlueprintContextOverrides"
            },
            "type": "object"
        },
        "BlueprintNodeDescriptor": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "BlueprintNodeDescriptor",
                    "type": "string"
                },
                "ChildrenIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "CreationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "Id": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                },
                "ParentIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "RevisionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "BlueprintNodeDescriptor"
            },
            "type": "object"
        },
        "PromoteDemoteRequest": {
            "properties": {
                "DestinationRepositoryId": {
                    "type": "string"
                },
                "Instruction": {
                    "$ref": "#/definitions/OperationInstruction"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "PromoteDemoteRequestType",
            "xml": {
                "name": "PromoteDemoteRequest"
            },
            "type": "object"
        },
        "OperationResult": {
            "properties": {
                "$type": {
                    "example": "OperationResult",
                    "type": "string"
                },
                "Result": {
                    "$ref": "#/definitions/IdentifiableObject"
                },
                "ValidationWarnings": {
                    "items": {
                        "$ref": "#/definitions/ValidationWarning"
                    },
                    "xml": {
                        "name": "ValidationWarning",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "OperationResult"
            },
            "type": "object"
        },
        "IdentifiableObject": {
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "IdentifiableObject",
                    "type": "string"
                },
                "ApplicableActions": {
                    "items": {
                        "$ref": "#/definitions/HateoasLink"
                    },
                    "xml": {
                        "name": "HateoasLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionData": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IsEditable": {
                    "type": "boolean"
                },
                "ListLinks": {
                    "items": {
                        "$ref": "#/definitions/HateoasLink"
                    },
                    "xml": {
                        "name": "HateoasLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SecurityDescriptor": {
                    "$ref": "#/definitions/SecurityDescriptor"
                },
                "VersionInfo": {
                    "$ref": "#/definitions/BasicVersionInfo"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "IdentifiableObjectType",
            "xml": {
                "name": "IdentifiableObject"
            },
            "type": "object"
        },
        "ValidationWarning": {
            "properties": {
                "Location": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "Source": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ValidationWarning"
            },
            "type": "object"
        },
        "HateoasLink": {
            "properties": {
                "$type": {
                    "example": "HateoasLink",
                    "type": "string"
                },
                "Href": {
                    "type": "string"
                },
                "Rel": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "HateoasLink"
            },
            "type": "object"
        },
        "SecurityDescriptor": {
            "properties": {
                "$type": {
                    "example": "SecurityDescriptor",
                    "type": "string"
                },
                "Permissions": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Read",
                        "Write",
                        "Delete",
                        "Localize",
                        "All"
                    ]
                },
                "Rights": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "PublicationAccess",
                        "PublicationManagement",
                        "FolderManagement",
                        "StructureGroupManagement",
                        "SchemaManagement",
                        "ComponentManagement",
                        "ComponentTemplateManagement",
                        "PageManagement",
                        "PageTemplateManagement",
                        "ProfileManagement",
                        "PublishManagement",
                        "PermissionManagement",
                        "WorkflowManagement",
                        "CategoryManagement",
                        "TemplateBuildingBlockManagement",
                        "VirtualFolderManagement",
                        "BundleManagement",
                        "BusinessProcessTypeManagement",
                        "PublicationAdministration",
                        "All"
                    ]
                }
            },
            "xml": {
                "name": "SecurityDescriptor"
            },
            "type": "object"
        },
        "BasicVersionInfo": {
            "properties": {
                "$type": {
                    "example": "BasicVersionInfo",
                    "type": "string"
                },
                "CreationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "RevisionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "BasicVersionInfo"
            },
            "type": "object"
        },
        "BlueprintInfo": {
            "properties": {
                "$type": {
                    "example": "BlueprintInfo",
                    "type": "string"
                },
                "IsLocalized": {
                    "type": "boolean"
                },
                "IsShared": {
                    "type": "boolean"
                },
                "OwningRepository": {
                    "$ref": "#/definitions/Link"
                },
                "PrimaryBluePrintParentItem": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "BlueprintInfo"
            },
            "type": "object"
        },
        "LocationInfo": {
            "properties": {
                "$type": {
                    "example": "LocationInfo",
                    "type": "string"
                },
                "ContextRepository": {
                    "$ref": "#/definitions/Link"
                },
                "OrganizationalItem": {
                    "$ref": "#/definitions/Link"
                },
                "Path": {
                    "type": "string"
                },
                "WebDavUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "LocationInfo"
            },
            "type": "object"
        },
        "LockInfo": {
            "properties": {
                "$type": {
                    "example": "LockInfo",
                    "type": "string"
                },
                "LockDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "LockType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "LockUser": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "LockInfo"
            },
            "type": "object"
        },
        "LimitedVersionInfo": {
            "properties": {
                "$type": {
                    "example": "LimitedVersionInfo",
                    "type": "string"
                },
                "CreationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "Creator": {
                    "$ref": "#/definitions/Link"
                },
                "RevisionDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "LimitedVersionInfo"
            },
            "type": "object"
        },
        "RepositoryLocalObject": {
            "allOf": [
                {
                    "$ref": "#/definitions/IdentifiableObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "BluePrintInfo": {
                            "$ref": "#/definitions/BlueprintInfo"
                        },
                        "IsPublishedInContext": {
                            "type": "boolean"
                        },
                        "LocationInfo": {
                            "$ref": "#/definitions/LocationInfo"
                        },
                        "LockInfo": {
                            "$ref": "#/definitions/LockInfo"
                        },
                        "Metadata": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        },
                        "MetadataSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "VersionInfo": {
                            "$ref": "#/definitions/LimitedVersionInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "RepositoryLocalObject"
            },
            "type": "object"
        },
        "PublishedItemInfo": {
            "properties": {
                "ComponentPresentationType": {
                    "type": "string",
                    "enum": [
                        "None",
                        "Embedded",
                        "DynamicOnPage",
                        "DynamicQueryBased"
                    ]
                },
                "ItemId": {
                    "type": "string"
                },
                "ItemLastModifiedTimeStamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "TemplateId": {
                    "type": "string"
                },
                "TemplateLastModifiedTimeStamp": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "PublishedItemInfo"
            },
            "type": "object"
        },
        "ApiStatus": {
            "properties": {
                "ApiVersion": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Details": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "Links": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ServerTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "ApiStatus"
            },
            "type": "object"
        },
        "ValidationError": {
            "properties": {
                "ErrorCode": {
                    "type": "string"
                },
                "ExceptionName": {
                    "type": "string"
                },
                "Location": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "Source": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ValidationError"
            },
            "type": "object"
        },
        "TemplateType": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "TemplateType",
                    "type": "string"
                },
                "HasBinaryContent": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "MimeType": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "WebDavFileExtensionMappings": {
                    "items": {
                        "$ref": "#/definitions/WebDavFileExtensionMapping"
                    },
                    "xml": {
                        "name": "WebDavFileExtensionMapping",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "TemplateType"
            },
            "type": "object"
        },
        "WebDavFileExtensionMapping": {
            "properties": {
                "$type": {
                    "example": "WebDavFileExtensionMapping",
                    "type": "string"
                },
                "FileExtension": {
                    "type": "string"
                },
                "ItemType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Publication",
                        "Folder",
                        "StructureGroup",
                        "Schema",
                        "Component",
                        "ComponentTemplate",
                        "Page",
                        "PageTemplate",
                        "TargetGroup",
                        "Category",
                        "Keyword",
                        "TemplateBuildingBlock",
                        "BusinessProcessType",
                        "VirtualFolder",
                        "PublicationTarget",
                        "TargetType",
                        "TargetDestination",
                        "MultimediaType",
                        "User",
                        "Group",
                        "DirectoryService",
                        "DirectoryGroupMapping",
                        "Batch",
                        "MultipleOperations",
                        "PublishTransaction",
                        "WorkflowType",
                        "ApprovalStatus",
                        "ProcessDefinition",
                        "ProcessInstance",
                        "ProcessHistory",
                        "ActivityDefinition",
                        "ActivityInstance",
                        "ActivityHistory",
                        "WorkItem"
                    ]
                }
            },
            "xml": {
                "name": "WebDavFileExtensionMapping"
            },
            "type": "object"
        },
        "PublicationType": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "PublicationType",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PublicationType"
            },
            "type": "object"
        },
        "SystemPrivilege": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "SystemPrivilege",
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Key": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "SystemPrivilege"
            },
            "type": "object"
        },
        "SystemWideListFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "SystemWideListFilter"
            },
            "type": "object"
        },
        "SubjectRelatedListFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "SubjectRelatedListFilter"
            },
            "type": "object"
        },
        "UsesItemsFilter": {
            "properties": {
                "$type": {
                    "example": "UsesItemsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeBlueprintParentItem": {
                    "type": "boolean"
                },
                "IncludeExternalLinks": {
                    "type": "boolean"
                },
                "InRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "UsesItemsFilter"
            },
            "type": "object"
        },
        "UsedByItemsFilter": {
            "properties": {
                "$type": {
                    "example": "UsedByItemsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExcludeTaxonomyRelations": {
                    "type": "boolean"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludedVersions": {
                    "type": "string",
                    "enum": [
                        "AllVersions",
                        "OnlyLatestVersions",
                        "OnlyLatestAndCheckedOutVersions"
                    ]
                },
                "IncludeLocalCopies": {
                    "type": "boolean"
                },
                "IncludeVersionsColumn": {
                    "type": "boolean"
                },
                "InRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "UsedByItemsFilter"
            },
            "type": "object"
        },
        "ContainingBundlesFilter": {
            "properties": {
                "$type": {
                    "example": "ContainingBundlesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeBundleTypeColumns": {
                    "type": "boolean"
                },
                "IncludeDescriptionColumn": {
                    "type": "boolean"
                },
                "OnlySpecifiedBluePrintVariant": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                },
                "SuppressLocalCopies": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "ContainingBundlesFilter"
            },
            "type": "object"
        },
        "TreeNode": {
            "properties": {
                "IdRef": {
                    "type": "string"
                },
                "DisplayName": {
                    "type": "string"
                },
                "Children": {
                    "items": {
                        "$ref": "#/definitions/TreeNode"
                    },
                    "xml": {
                        "name": "TreeNode",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "Data": {
                    "$ref": "#/definitions/IdentifiableObject"
                },
                "DataType": {
                    "type": "string"
                },
                "Parent": {
                    "$ref": "#/definitions/TreeNode"
                }
            },
            "xml": {
                "name": "TreeNode"
            },
            "type": "object"
        },
        "AccessControlList": {
            "properties": {
                "$type": {
                    "example": "AccessControlList",
                    "type": "string"
                },
                "AccessControlEntries": {
                    "items": {
                        "$ref": "#/definitions/AccessControlEntry"
                    },
                    "xml": {
                        "name": "AccessControlEntry",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "AccessControlList"
            },
            "type": "object"
        },
        "AccessControlEntry": {
            "properties": {
                "$type": {
                    "example": "AccessControlEntry",
                    "type": "string"
                },
                "AllowedPermissions": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Read",
                        "Write",
                        "Delete",
                        "Localize",
                        "All"
                    ]
                },
                "AllowedRights": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "PublicationAccess",
                        "PublicationManagement",
                        "FolderManagement",
                        "StructureGroupManagement",
                        "SchemaManagement",
                        "ComponentManagement",
                        "ComponentTemplateManagement",
                        "PageManagement",
                        "PageTemplateManagement",
                        "ProfileManagement",
                        "PublishManagement",
                        "PermissionManagement",
                        "WorkflowManagement",
                        "CategoryManagement",
                        "TemplateBuildingBlockManagement",
                        "VirtualFolderManagement",
                        "BundleManagement",
                        "BusinessProcessTypeManagement",
                        "PublicationAdministration",
                        "All"
                    ]
                },
                "DeniedPermissions": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Read",
                        "Write",
                        "Delete",
                        "Localize",
                        "All"
                    ]
                },
                "DeniedRights": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "PublicationAccess",
                        "PublicationManagement",
                        "FolderManagement",
                        "StructureGroupManagement",
                        "SchemaManagement",
                        "ComponentManagement",
                        "ComponentTemplateManagement",
                        "PageManagement",
                        "PageTemplateManagement",
                        "ProfileManagement",
                        "PublishManagement",
                        "PermissionManagement",
                        "WorkflowManagement",
                        "CategoryManagement",
                        "TemplateBuildingBlockManagement",
                        "VirtualFolderManagement",
                        "BundleManagement",
                        "BusinessProcessTypeManagement",
                        "PublicationAdministration",
                        "All"
                    ]
                },
                "Trustee": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "AccessControlEntry"
            },
            "type": "object"
        },
        "OrganizationalItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/RepositoryLocalObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "AccessControlList": {
                            "$ref": "#/definitions/AccessControlList"
                        },
                        "ContentSecurityDescriptor": {
                            "$ref": "#/definitions/SecurityDescriptor"
                        },
                        "IsPermissionsInheritanceRoot": {
                            "type": "boolean"
                        },
                        "IsRootOrganizationalItem": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "OrganizationalItem"
            },
            "type": "object"
        },
        "PublishInstructionBase": {
            "properties": {
                "ExtensionXml": {
                    "type": "string"
                },
                "ResolveInstruction": {
                    "$ref": "#/definitions/ResolveInstruction"
                },
                "RollbackOnFailure": {
                    "type": "boolean"
                },
                "StartAt": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "PublishInstructionBase"
            },
            "type": "object"
        },
        "PublishContext": {
            "properties": {
                "$type": {
                    "example": "PublishContext",
                    "type": "string"
                },
                "ProcessedItems": {
                    "items": {
                        "$ref": "#/definitions/ProcessedItem"
                    },
                    "xml": {
                        "name": "ProcessedItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "Publication": {
                    "$ref": "#/definitions/Link"
                },
                "PublicationTarget": {
                    "$ref": "#/definitions/Link"
                },
                "ResolvedItems": {
                    "items": {
                        "$ref": "#/definitions/ResolvedItem"
                    },
                    "xml": {
                        "name": "ResolvedItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "TargetType": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "PublishContext"
            },
            "type": "object"
        },
        "ProcessedItem": {
            "properties": {
                "$type": {
                    "example": "ProcessedItem",
                    "type": "string"
                },
                "HasRenderFailure": {
                    "type": "boolean"
                },
                "IsRendered": {
                    "type": "boolean"
                },
                "ReasonOfRenderFailure": {
                    "type": "string"
                },
                "RenderTime": {
                    "type": "string"
                },
                "ResolvedItem": {
                    "$ref": "#/definitions/ResolvedItem"
                }
            },
            "xml": {
                "name": "ProcessedItem"
            },
            "type": "object"
        },
        "ResolvedItem": {
            "properties": {
                "$type": {
                    "example": "ResolvedItem",
                    "type": "string"
                },
                "Item": {
                    "$ref": "#/definitions/Link"
                },
                "ItemPath": {
                    "type": "string"
                },
                "PublicationTarget": {
                    "$ref": "#/definitions/Link"
                },
                "Template": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "ResolvedItem"
            },
            "type": "object"
        },
        "PublishTransaction": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Creator": {
                            "$ref": "#/definitions/Link"
                        },
                        "DeployerAction": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "Commit",
                                "Wait",
                                "Abort"
                            ]
                        },
                        "HasRenderFailures": {
                            "type": "boolean"
                        },
                        "Information": {
                            "type": "string"
                        },
                        "Instruction": {
                            "$ref": "#/definitions/PublishInstructionBase"
                        },
                        "IsCompleted": {
                            "type": "boolean"
                        },
                        "Items": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Priority": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "Low",
                                "Normal",
                                "High"
                            ]
                        },
                        "PublishContexts": {
                            "items": {
                                "$ref": "#/definitions/PublishContext"
                            },
                            "xml": {
                                "name": "PublishContext",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "PublisherHost": {
                            "type": "string"
                        },
                        "RenderingTime": {
                            "type": "string"
                        },
                        "ResolvingTime": {
                            "type": "string"
                        },
                        "State": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "ScheduledForPublish",
                                "WaitingForPublish",
                                "InProgress",
                                "ScheduledForDeployment",
                                "WaitingForDeployment",
                                "Failed",
                                "Success",
                                "Succes",
                                "Warning",
                                "Resolving",
                                "Rendering",
                                "Throttled",
                                "ReadyForTransport",
                                "Transporting",
                                "Deploying",
                                "PreparingDeployment",
                                "PreCommittingDeployment",
                                "CommittingDeployment",
                                "WaitingForUndo",
                                "Undoing",
                                "Undone",
                                "UndoFailed",
                                "WaitingForCdEnvironment"
                            ]
                        },
                        "StateChangeDateTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "TargetType": {
                            "$ref": "#/definitions/Link"
                        },
                        "TotalExecutionTime": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "PublishTransaction"
            },
            "type": "object"
        },
        "PublishRequest": {
            "properties": {
                "Ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "Priority": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Low",
                        "Normal",
                        "High"
                    ]
                },
                "PublishInstruction": {
                    "$ref": "#/definitions/PublishInstruction"
                },
                "TargetIdsOrPurposes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "PublishRequest"
            },
            "type": "object"
        },
        "UnPublishRequest": {
            "properties": {
                "Ids": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "Priority": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Low",
                        "Normal",
                        "High"
                    ]
                },
                "TargetIdsOrPurposes": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "UnPublishInstruction": {
                    "$ref": "#/definitions/UnPublishInstruction"
                }
            },
            "xml": {
                "name": "UnPublishRequest"
            },
            "type": "object"
        },
        "PublishInfo": {
            "properties": {
                "$type": {
                    "example": "PublishInfo",
                    "type": "string"
                },
                "PublicationTarget": {
                    "$ref": "#/definitions/Link"
                },
                "PublishedAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "RenderedWith": {
                    "$ref": "#/definitions/Link"
                },
                "Repository": {
                    "$ref": "#/definitions/Link"
                },
                "TargetPurpose": {
                    "type": "string"
                },
                "TargetType": {
                    "$ref": "#/definitions/Link"
                },
                "User": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "PublishInfo"
            },
            "type": "object"
        },
        "IsPublishedRequest": {
            "properties": {
                "IsPublishedInContext": {
                    "type": "boolean"
                },
                "ItemId": {
                    "type": "string"
                },
                "PublishingTargetIdOrPurpose": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "IsPublishedRequest"
            },
            "type": "object"
        },
        "PublishTransactionsFilter": {
            "properties": {
                "$type": {
                    "example": "PublishTransactionsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "EndDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForRepository": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsCompleted": {
                    "type": "boolean"
                },
                "Priority": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Low",
                        "Normal",
                        "High"
                    ]
                },
                "PublicationTarget": {
                    "$ref": "#/definitions/Link"
                },
                "PublishedBy": {
                    "$ref": "#/definitions/Link"
                },
                "PublisherHost": {
                    "type": "string"
                },
                "PublishTransactionState": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "ScheduledForPublish",
                        "WaitingForPublish",
                        "InProgress",
                        "ScheduledForDeployment",
                        "WaitingForDeployment",
                        "Failed",
                        "Success",
                        "Succes",
                        "Warning",
                        "Resolving",
                        "Rendering",
                        "Throttled",
                        "ReadyForTransport",
                        "Transporting",
                        "Deploying",
                        "PreparingDeployment",
                        "PreCommittingDeployment",
                        "CommittingDeployment",
                        "WaitingForUndo",
                        "Undoing",
                        "Undone",
                        "UndoFailed",
                        "WaitingForCdEnvironment"
                    ]
                },
                "SortExpression": {
                    "type": "string"
                },
                "StartDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "TargetType": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "PublishTransactionsFilter"
            },
            "type": "object"
        },
        "RemovePublishStateRequest": {
            "properties": {
                "PublicationId": {
                    "type": "string"
                },
                "PublishingTargetIdOrPurpose": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "RemovePublishStateRequest"
            },
            "type": "object"
        },
        "PublishedUrlRequest": {
            "properties": {
                "ItemId": {
                    "type": "string"
                },
                "PublishingTargetIdOrPurpose": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PublishedUrlRequest"
            },
            "type": "object"
        },
        "PublishSource": {
            "properties": {
                "ContextPublication": {
                    "$ref": "#/definitions/Link"
                },
                "TargetType": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "PublishSource"
            },
            "type": "object"
        },
        "QueueMessage": {
            "properties": {
                "Action": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Insert",
                        "Update",
                        "Delete",
                        "Reset",
                        "ExpirationActivity"
                    ]
                },
                "CreationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "CreationHostName": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "Item": {
                    "$ref": "#/definitions/Link"
                },
                "Priority": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Low",
                        "Normal",
                        "High"
                    ]
                },
                "ProcessingConsumerId": {
                    "type": "integer",
                    "format": "int32"
                },
                "PublicationTarget": {
                    "$ref": "#/definitions/Link"
                },
                "QueueId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ScheduleDateTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "QueueMessage"
            },
            "type": "object"
        },
        "Queue": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "NumberOfMessages": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "Queue"
            },
            "type": "object"
        },
        "RenderRequest": {
            "properties": {
                "ItemId": {
                    "type": "string"
                },
                "PublicationTargetIdOrPurpose": {
                    "type": "string"
                },
                "PublishInstruction": {
                    "$ref": "#/definitions/PublishInstruction"
                },
                "TemplateId": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "RenderRequest"
            },
            "type": "object"
        },
        "RenderedItem": {
            "properties": {
                "$type": {
                    "example": "RenderedItem",
                    "type": "string"
                },
                "Binaries": {
                    "items": {
                        "$ref": "#/definitions/Binary"
                    },
                    "xml": {
                        "name": "Binary",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ChildRenderedItems": {
                    "items": {
                        "$ref": "#/definitions/RenderedItem"
                    },
                    "xml": {
                        "name": "RenderedItem",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "CodePage": {
                    "type": "integer",
                    "format": "int32"
                },
                "Content": {
                    "type": "string",
                    "format": "byte"
                },
                "Data": {
                    "type": "string"
                },
                "ExecutionTime": {
                    "type": "string"
                },
                "Instructions": {
                    "type": "string"
                },
                "IsRenderedCompletely": {
                    "type": "boolean"
                },
                "LinkedData": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "Metadata": {
                    "type": "string"
                },
                "RenderInstruction": {
                    "$ref": "#/definitions/RenderInstruction"
                },
                "ResolvedItem": {
                    "$ref": "#/definitions/ResolvedItem"
                }
            },
            "xml": {
                "name": "RenderedItem"
            },
            "type": "object"
        },
        "Binary": {
            "properties": {
                "$type": {
                    "example": "Binary",
                    "type": "string"
                },
                "ComponentId": {
                    "type": "string"
                },
                "Filename": {
                    "type": "string"
                },
                "FilePath": {
                    "type": "string"
                },
                "LocationId": {
                    "type": "string"
                },
                "MimeType": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "RelatedComponentId": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "VariantId": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Binary"
            },
            "type": "object"
        },
        "PreviewRequest": {
            "properties": {
                "ItemData": {
                    "$ref": "#/definitions/RepositoryLocalObject"
                },
                "PublishInstruction": {
                    "$ref": "#/definitions/PublishInstruction"
                },
                "TemplateData": {
                    "$ref": "#/definitions/Template"
                }
            },
            "xml": {
                "name": "PreviewRequest"
            },
            "type": "object"
        },
        "BinaryContent": {
            "properties": {
                "$type": {
                    "example": "BinaryContent",
                    "type": "string"
                },
                "BinaryId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ExternalBinaryUri": {
                    "type": "string"
                },
                "Filename": {
                    "type": "string"
                },
                "FileSize": {
                    "type": "integer",
                    "format": "int32"
                },
                "IsExternal": {
                    "type": "boolean"
                },
                "MimeType": {
                    "type": "string"
                },
                "MultimediaType": {
                    "$ref": "#/definitions/Link"
                },
                "Size": {
                    "type": "integer",
                    "format": "int32"
                },
                "UploadFromFile": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BinaryContent"
            },
            "type": "object"
        },
        "DynamicVersionInfo": {
            "properties": {
                "$type": {
                    "example": "DynamicVersionInfo",
                    "type": "string"
                },
                "Revision": {
                    "type": "integer",
                    "format": "int32"
                },
                "RevisionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "Revisor": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "DynamicVersionInfo"
            },
            "type": "object"
        },
        "FullVersionInfo": {
            "properties": {
                "$type": {
                    "example": "FullVersionInfo",
                    "type": "string"
                },
                "CheckOutDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "CheckOutUser": {
                    "$ref": "#/definitions/Link"
                },
                "CreationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "Creator": {
                    "$ref": "#/definitions/Link"
                },
                "IsNew": {
                    "type": "boolean"
                },
                "LastVersion": {
                    "type": "integer",
                    "format": "int32"
                },
                "LockType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "Revision": {
                    "type": "integer",
                    "format": "int32"
                },
                "RevisionDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "Revisor": {
                    "$ref": "#/definitions/Link"
                },
                "SystemComment": {
                    "type": "string"
                },
                "UserComment": {
                    "type": "string"
                },
                "Version": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "FullVersionInfo"
            },
            "type": "object"
        },
        "Template": {
            "allOf": [
                {
                    "$ref": "#/definitions/VersionedItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "BinaryContent": {
                            "$ref": "#/definitions/BinaryContent"
                        },
                        "Content": {
                            "type": "string"
                        },
                        "ParameterSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "TemplateType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Template"
            },
            "type": "object"
        },
        "SchemaInstance": {
            "properties": {
                "$type": {
                    "example": "SchemaInstance",
                    "type": "string"
                },
                "ContainerItem": {
                    "$ref": "#/definitions/Link"
                },
                "Content": {
                    "additionalProperties": {
                        "$ref": "#/definitions/FieldDefinition"
                    },
                    "type": "object"
                },
                "Metadata": {
                    "additionalProperties": {
                        "$ref": "#/definitions/FieldDefinition"
                    },
                    "type": "object"
                },
                "Region": {
                    "$ref": "#/definitions/EmbeddedRegion"
                },
                "RegionXml": {
                    "type": "string"
                },
                "Schema": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "SchemaInstance"
            },
            "type": "object"
        },
        "FieldDefinition": {
            "properties": {
                "$type": {
                    "example": "FieldDefinition",
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "EmbeddedFieldDefinition": {
                    "additionalProperties": {
                        "$ref": "#/definitions/FieldDefinition"
                    },
                    "type": "object"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "object"
                    },
                    "type": "object"
                },
                "FieldDefinitionType": {
                    "type": "string",
                    "enum": [
                        "Number",
                        "Date",
                        "Text",
                        "Xhtml",
                        "Embedded",
                        "ComponentLink",
                        "ExternalLink",
                        "KeywordLink"
                    ]
                },
                "Name": {
                    "type": "string"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "FieldDefinitionType",
            "xml": {
                "name": "FieldDefinition"
            },
            "type": "object"
        },
        "ComponentPresentation": {
            "properties": {
                "$type": {
                    "example": "ComponentPresentation",
                    "type": "string"
                },
                "Component": {
                    "$ref": "#/definitions/Link"
                },
                "ComponentTemplate": {
                    "$ref": "#/definitions/Link"
                },
                "Conditions": {
                    "items": {
                        "$ref": "#/definitions/TargetGroupCondition"
                    },
                    "xml": {
                        "name": "TargetGroupCondition",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "ComponentPresentation"
            },
            "type": "object"
        },
        "Region": {
            "properties": {
                "$type": {
                    "example": "Region",
                    "type": "string"
                },
                "RegionName": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Region"
            },
            "type": "object"
        },
        "TargetGroupCondition": {
            "properties": {
                "$type": {
                    "example": "TargetGroupCondition",
                    "type": "string"
                },
                "Negate": {
                    "type": "boolean"
                },
                "TargetGroup": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "TargetGroupCondition"
            },
            "type": "object"
        },
        "EmbeddedRegion": {
            "allOf": [
                {
                    "$ref": "#/definitions/Region"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ComponentPresentations": {
                            "items": {
                                "$ref": "#/definitions/ComponentPresentation"
                            },
                            "xml": {
                                "name": "ComponentPresentation",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Metadata": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        },
                        "Regions": {
                            "items": {
                                "$ref": "#/definitions/Region"
                            },
                            "xml": {
                                "name": "Region",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "RegionSchema": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "EmbeddedRegion"
            },
            "type": "object"
        },
        "RegionDefinition": {
            "properties": {
                "$type": {
                    "example": "RegionDefinition",
                    "type": "string"
                },
                "ComponentPresentationConstraints": {
                    "items": {
                        "$ref": "#/definitions/ComponentPresentationConstraint"
                    },
                    "xml": {
                        "name": "ComponentPresentationConstraint",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "DefaultComponentPresentations": {
                    "items": {
                        "$ref": "#/definitions/ComponentPresentation"
                    },
                    "xml": {
                        "name": "ComponentPresentation",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "NestedRegions": {
                    "items": {
                        "$ref": "#/definitions/NestedRegion"
                    },
                    "xml": {
                        "name": "NestedRegion",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "RegionDefinition"
            },
            "type": "object"
        },
        "ComponentPresentationConstraint": {
            "properties": {
                "$type": {
                    "example": "ComponentPresentationConstraint",
                    "type": "string"
                }
            },
            "xml": {
                "name": "ComponentPresentationConstraint"
            },
            "type": "object"
        },
        "NestedRegion": {
            "properties": {
                "$type": {
                    "example": "NestedRegion",
                    "type": "string"
                },
                "IsMandatory": {
                    "type": "boolean"
                },
                "RegionName": {
                    "type": "string"
                },
                "RegionSchema": {
                    "$ref": "#/definitions/ExpandableLink"
                }
            },
            "xml": {
                "name": "NestedRegion"
            },
            "type": "object"
        },
        "ExpandableLink": {
            "properties": {
                "IdRef": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "ExpandableLink",
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ExpandedData": {
                    "$ref": "#/definitions/IdentifiableObject"
                },
                "WebDavUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ExpandableLink"
            },
            "type": "object"
        },
        "Schema": {
            "allOf": [
                {
                    "$ref": "#/definitions/VersionedItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "AllowedMultimediaTypes": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "BundleProcess": {
                            "$ref": "#/definitions/Link"
                        },
                        "ComponentProcess": {
                            "$ref": "#/definitions/Link"
                        },
                        "DeleteBundleOnProcessFinished": {
                            "type": "boolean"
                        },
                        "Description": {
                            "type": "string"
                        },
                        "Fields": {
                            "additionalProperties": {
                                "$ref": "#/definitions/FieldDefinition"
                            },
                            "type": "object"
                        },
                        "IsTridionWebSchema": {
                            "type": "boolean"
                        },
                        "MetadataFields": {
                            "additionalProperties": {
                                "$ref": "#/definitions/FieldDefinition"
                            },
                            "type": "object"
                        },
                        "NamespaceUri": {
                            "type": "string"
                        },
                        "Purpose": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "Component",
                                "Multimedia",
                                "Embedded",
                                "Metadata",
                                "Protocol",
                                "VirtualFolderType",
                                "TemplateParameters",
                                "Bundle",
                                "Region",
                                "Widget"
                            ]
                        },
                        "RegionDefinition": {
                            "$ref": "#/definitions/RegionDefinition"
                        },
                        "RootElementName": {
                            "type": "string"
                        },
                        "Xsd": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Schema"
            },
            "type": "object"
        },
        "SynchronizationResult": {
            "properties": {
                "$type": {
                    "example": "SynchronizationResult",
                    "type": "string"
                },
                "SynchronizationActions": {
                    "items": {
                        "$ref": "#/definitions/SynchronizationAction"
                    },
                    "xml": {
                        "name": "SynchronizationAction",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SynchronizedItem": {
                    "$ref": "#/definitions/IdentifiableObject"
                }
            },
            "xml": {
                "name": "SynchronizationResult"
            },
            "type": "object"
        },
        "SynchronizationAction": {
            "properties": {
                "$type": {
                    "example": "SynchronizationAction",
                    "type": "string"
                },
                "FieldDescription": {
                    "type": "string"
                },
                "FieldIndex": {
                    "type": "integer",
                    "format": "int32"
                },
                "FieldName": {
                    "type": "string"
                },
                "SynchronizationActionApplied": {
                    "type": "string",
                    "enum": [
                        "Basic",
                        "FixNamespace",
                        "RemoveUnknownFields",
                        "RemoveAdditionalValues",
                        "ApplyDefaultValuesForMissingMandatoryFields",
                        "ApplyDefaultValuesForMissingNonMandatoryFields",
                        "ApplyFilterXsltToXhtmlFields",
                        "ConvertFieldType",
                        "All",
                        "UnknownByClient"
                    ]
                }
            },
            "xml": {
                "name": "SynchronizationAction"
            },
            "type": "object"
        },
        "SearchQuery": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "SearchQuery",
                    "type": "string"
                },
                "ActivityDefinition": {
                    "$ref": "#/definitions/Link"
                },
                "Author": {
                    "$ref": "#/definitions/Link"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "BasedOnSchemas": {
                    "items": {
                        "$ref": "#/definitions/BasedOnSchema"
                    },
                    "xml": {
                        "name": "BasedOnSchema",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "BlueprintStatus": {
                    "type": "string",
                    "enum": [
                        "Unspecified",
                        "Local",
                        "Localized",
                        "Shared"
                    ]
                },
                "Description": {
                    "type": "string"
                },
                "FromRepository": {
                    "$ref": "#/definitions/Link"
                },
                "FullTextQuery": {
                    "type": "string"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeDescriptionColumn": {
                    "type": "boolean"
                },
                "IncludeLocationInfoColumns": {
                    "type": "boolean"
                },
                "IsDescriptionCaseSensitive": {
                    "type": "boolean"
                },
                "IsPublished": {
                    "type": "boolean"
                },
                "IsTitleCaseSensitive": {
                    "type": "boolean"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "LockType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "LockUser": {
                    "$ref": "#/definitions/Link"
                },
                "ModifiedAfter": {
                    "type": "string",
                    "format": "date-time"
                },
                "ModifiedBefore": {
                    "type": "string",
                    "format": "date-time"
                },
                "ProcessDefinition": {
                    "$ref": "#/definitions/Link"
                },
                "ResultLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "SearchIn": {
                    "$ref": "#/definitions/Link"
                },
                "SearchInSubtree": {
                    "type": "boolean"
                },
                "UsedKeywords": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "SearchQuery"
            },
            "type": "object"
        },
        "BasedOnSchema": {
            "properties": {
                "$type": {
                    "example": "BasedOnSchema",
                    "type": "string"
                },
                "Field": {
                    "type": "string"
                },
                "FieldValue": {
                    "type": "string"
                },
                "Schema": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "BasedOnSchema"
            },
            "type": "object"
        },
        "PurgeOldVersionsInstruction": {
            "properties": {
                "$type": {
                    "example": "PurgeOldVersionsInstruction",
                    "type": "string"
                },
                "Containers": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "KeepVersionsModifiedAfter": {
                    "type": "string",
                    "format": "date-time"
                },
                "KeepVersionsWithinDaysBeforeLastCheckIn": {
                    "type": "integer",
                    "format": "int32"
                },
                "MaxResolvedVersionedItemsCount": {
                    "type": "integer",
                    "format": "int32"
                },
                "Recursive": {
                    "type": "boolean"
                },
                "VersionsToKeep": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "xml": {
                "name": "PurgeOldVersionsInstruction"
            },
            "type": "object"
        },
        "TridionLanguageInfo": {
            "properties": {
                "$type": {
                    "example": "TridionLanguageInfo",
                    "type": "string"
                },
                "LanguageId": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "NativeName": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "TridionLanguageInfo"
            },
            "type": "object"
        },
        "DirectoryServiceUser": {
            "properties": {
                "$type": {
                    "example": "DirectoryServiceUser",
                    "type": "string"
                },
                "AdditionalAttributes": {
                    "additionalProperties": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": "object"
                },
                "AuthenticationType": {
                    "type": "string"
                },
                "DN": {
                    "type": "string"
                },
                "IsAuthenticated": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "DirectoryServiceUser"
            },
            "type": "object"
        },
        "TridionDirectoryUsersFilter": {
            "properties": {
                "SubtreeDN": {
                    "type": "string"
                },
                "UserNameSearchMode": {
                    "type": "string",
                    "enum": [
                        "UserNameOnly",
                        "FullNameOnly"
                    ]
                },
                "UserNameStartsWith": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "TridionDirectoryUsersFilter"
            },
            "type": "object"
        },
        "NotificationMessage": {
            "properties": {
                "$type": {
                    "example": "NotificationMessage",
                    "type": "string"
                },
                "Action": {
                    "type": "string"
                },
                "Details": {
                    "type": "string"
                },
                "SubjectIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "NotificationMessage"
            },
            "type": "object"
        },
        "CultureInfo": {
            "properties": {
                "DisplayName": {
                    "type": "string"
                },
                "EnglishName": {
                    "type": "string"
                },
                "IetfLanguageTag": {
                    "type": "string"
                },
                "IsNeutralCulture": {
                    "type": "boolean"
                },
                "LCID": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "NativeName": {
                    "type": "string"
                },
                "ThreeLetterISOLanguageName": {
                    "type": "string"
                },
                "ThreeLetterWindowsLanguageName": {
                    "type": "string"
                },
                "TwoLetterISOLanguageName": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CultureInfo"
            },
            "type": "object"
        },
        "UserProfile": {
            "properties": {
                "DisplayName": {
                    "type": "string"
                },
                "$type": {
                    "example": "UserProfile",
                    "type": "string"
                },
                "Avatar": {
                    "$ref": "#/definitions/UserAvatarDescriptor"
                },
                "Preferences": {
                    "$ref": "#/definitions/UserPreferences"
                },
                "Runtime": {
                    "$ref": "#/definitions/UserRuntimeInfo"
                },
                "User": {
                    "$ref": "#/definitions/User"
                }
            },
            "xml": {
                "name": "UserProfile"
            },
            "type": "object"
        },
        "UserAvatarDescriptor": {
            "properties": {
                "$type": {
                    "example": "UserAvatarDescriptor",
                    "type": "string"
                },
                "IsDefault": {
                    "type": "boolean"
                },
                "LastModified": {
                    "type": "string",
                    "format": "date-time"
                },
                "MimeType": {
                    "type": "string"
                },
                "Uri": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "UserAvatarDescriptor"
            },
            "type": "object"
        },
        "UserPreferences": {
            "properties": {
                "$type": {
                    "example": "UserPreferences",
                    "type": "string"
                },
                "AvatarUri": {
                    "type": "string"
                },
                "Favorites": {
                    "items": {
                        "$ref": "#/definitions/FavoriteLink"
                    },
                    "xml": {
                        "name": "FavoriteLink",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "MaxSearchResults": {
                    "type": "integer",
                    "format": "int32"
                },
                "StartLocation": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "UserPreferences"
            },
            "type": "object"
        },
        "UserRuntimeInfo": {
            "properties": {
                "$type": {
                    "example": "UserRuntimeInfo",
                    "type": "string"
                },
                "HasPublishRights": {
                    "type": "boolean"
                },
                "IsAdministrator": {
                    "type": "boolean"
                },
                "IsPermissionManager": {
                    "type": "boolean"
                },
                "IsPublicationAdministrator": {
                    "type": "boolean"
                },
                "IsPublicationManager": {
                    "type": "boolean"
                },
                "IsWorkflowManager": {
                    "type": "boolean"
                },
                "Locale": {
                    "$ref": "#/definitions/UserLocaleInfo"
                }
            },
            "xml": {
                "name": "UserRuntimeInfo"
            },
            "type": "object"
        },
        "User": {
            "allOf": [
                {
                    "$ref": "#/definitions/Trustee"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "IsEnabled": {
                            "type": "boolean"
                        },
                        "IsEnabledEditable": {
                            "type": "boolean"
                        },
                        "IsPrivilegesEditable": {
                            "type": "boolean"
                        },
                        "LanguageId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "LocaleId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "Privileges": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "User"
            },
            "type": "object"
        },
        "FavoriteLink": {
            "properties": {
                "IdRef": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "FavoriteLink",
                    "type": "string"
                },
                "Created": {
                    "type": "string"
                },
                "HasChildren": {
                    "type": "boolean"
                },
                "Icon": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "FavoriteLink"
            },
            "type": "object"
        },
        "UserLocaleInfo": {
            "properties": {
                "$type": {
                    "example": "UserLocaleInfo",
                    "type": "string"
                },
                "AmDesignator": {
                    "type": "string"
                },
                "DayNames": {
                    "type": "object"
                },
                "FirstDayOfWeek": {
                    "type": "string"
                },
                "FullDateTimeFormat": {
                    "type": "string"
                },
                "LanguageCode": {
                    "type": "string"
                },
                "LanguageId": {
                    "type": "string"
                },
                "LocaleId": {
                    "type": "string"
                },
                "LongDateFormat": {
                    "type": "string"
                },
                "LongTimeFormat": {
                    "type": "string"
                },
                "MonthNames": {
                    "type": "object"
                },
                "PmDesignator": {
                    "type": "string"
                },
                "ShortDateFormat": {
                    "type": "string"
                },
                "ShortDateTimeFormat": {
                    "type": "string"
                },
                "ShortDayNames": {
                    "type": "object"
                },
                "ShortestDayNames": {
                    "type": "object"
                },
                "ShortMonthNames": {
                    "type": "object"
                },
                "ShortTimeFormat": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "UserLocaleInfo"
            },
            "type": "object"
        },
        "GroupMembership": {
            "properties": {
                "$type": {
                    "example": "GroupMembership",
                    "type": "string"
                },
                "Group": {
                    "$ref": "#/definitions/Link"
                },
                "Scope": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "GroupMembership"
            },
            "type": "object"
        },
        "CheckInCheckOutRequest": {
            "properties": {
                "SetOrRemovePermanentLock": {
                    "type": "boolean"
                },
                "UserComment": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CheckInCheckOutRequest"
            },
            "type": "object"
        },
        "VersionedItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/RepositoryLocalObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "DynamicVersionInfo": {
                            "$ref": "#/definitions/DynamicVersionInfo"
                        },
                        "VersionInfo": {
                            "$ref": "#/definitions/FullVersionInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "VersionedItem"
            },
            "type": "object"
        },
        "RollBackRequest": {
            "properties": {
                "DeleteNewerVersions": {
                    "type": "boolean"
                },
                "UserComment": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "RollBackRequest"
            },
            "type": "object"
        },
        "WorkItem": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Activity": {
                            "$ref": "#/definitions/Link"
                        },
                        "Comment": {
                            "type": "string"
                        },
                        "Owner": {
                            "$ref": "#/definitions/Link"
                        },
                        "Process": {
                            "$ref": "#/definitions/Link"
                        },
                        "Subject": {
                            "$ref": "#/definitions/Link"
                        },
                        "SubjectOwningRepository": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "WorkItem"
            },
            "type": "object"
        },
        "StartWorkflowInstruction": {
            "properties": {
                "ActivityTitle": {
                    "type": "string"
                },
                "Assignee": {
                    "$ref": "#/definitions/Link"
                },
                "DueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "ProcessDefinition": {
                    "$ref": "#/definitions/Link"
                },
                "ProcessInstanceTitle": {
                    "type": "string"
                },
                "Subjects": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "WorkflowType": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "StartWorkflowInstruction"
            },
            "type": "object"
        },
        "Activity": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowObject"
                },
                {
                    "properties": {
                        "Assignee": {
                            "$ref": "#/definitions/Link"
                        },
                        "AssignmentDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "DueDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "FinishDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "FinishMessage": {
                            "type": "string"
                        },
                        "Owner": {
                            "$ref": "#/definitions/Link"
                        },
                        "Performers": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Position": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "Process": {
                            "$ref": "#/definitions/Link"
                        },
                        "StartDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "SuspendDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "WorkItems": {
                            "items": {
                                "$ref": "#/definitions/WorkItem"
                            },
                            "xml": {
                                "name": "WorkItem",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Activity"
            },
            "type": "object"
        },
        "ProcessInstance": {
            "allOf": [
                {
                    "$ref": "#/definitions/Process"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ProcessDefinition": {
                            "$ref": "#/definitions/Link"
                        },
                        "Variables": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ProcessInstance"
            },
            "type": "object"
        },
        "ProcessHistory": {
            "allOf": [
                {
                    "$ref": "#/definitions/Process"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "FinishDate": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "FinishReason": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "CompletedNormally",
                                "ForceFinished",
                                "Terminated"
                            ]
                        },
                        "ProcessDefinitionTitle": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ProcessHistory"
            },
            "type": "object"
        },
        "WorkflowScriptType": {
            "properties": {
                "Title": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "WorkflowScriptType"
            },
            "type": "object"
        },
        "ProcessDefinitionsRequest": {
            "properties": {
                "ItemIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ProcessDefinitionType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "Editing",
                        "Bundle"
                    ]
                }
            },
            "xml": {
                "name": "ProcessDefinitionsRequest"
            },
            "type": "object"
        },
        "PurgeWorkflowHistoryInstruction": {
            "properties": {
                "DeleteHistoryBefore": {
                    "type": "string",
                    "format": "date-time"
                },
                "Publication": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "PurgeWorkflowHistoryInstruction"
            },
            "type": "object"
        },
        "ActivityInstance": {
            "allOf": [
                {
                    "$ref": "#/definitions/Activity"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ActivityConstraints": {
                            "type": "string",
                            "enum": [
                                "None",
                                "DenyBundleMetadataEditing",
                                "DenySubjectEditing",
                                "DenyAddRemoveWorkItem",
                                "UnknownByClient"
                            ]
                        },
                        "ActivityDefinition": {
                            "$ref": "#/definitions/Link"
                        },
                        "ActivityState": {
                            "type": "string",
                            "enum": [
                                "Assigned",
                                "Started",
                                "Failed",
                                "Finished",
                                "Suspended",
                                "WaitingForWorkflowAgent",
                                "UnknownByClient"
                            ]
                        },
                        "IsExpirationExecution": {
                            "type": "boolean"
                        },
                        "ResumeBookmark": {
                            "type": "string"
                        },
                        "SuspendOrFailReason": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ActivityInstance"
            },
            "type": "object"
        },
        "SuspendAndResumeActivityRequest": {
            "properties": {
                "Reason": {
                    "type": "string"
                },
                "ResumeAt": {
                    "type": "string",
                    "format": "date-time"
                },
                "ResumeBookmark": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "SuspendAndResumeActivityRequest"
            },
            "type": "object"
        },
        "ActivityFinishRequest": {
            "properties": {
                "Message": {
                    "type": "string"
                },
                "NextActivityDueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "NextActivityTitle": {
                    "type": "string"
                },
                "NextAssignee": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "ActivityFinishRequest"
            },
            "type": "object"
        },
        "Filter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "SortExpression": {
                    "type": "string"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "FilterType",
            "xml": {
                "name": "Filter"
            },
            "type": "object"
        },
        "StronglyTypedFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "StronglyTypedFilter"
            },
            "type": "object"
        },
        "WhereUsedFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "InRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "WhereUsedFilter"
            },
            "type": "object"
        },
        "ActivityInstancesFilter": {
            "properties": {
                "$type": {
                    "example": "ActivityInstancesFilter",
                    "type": "string"
                },
                "ActivityState": {
                    "type": "string",
                    "enum": [
                        "Assigned",
                        "Started",
                        "Failed",
                        "Finished",
                        "Suspended",
                        "WaitingForWorkflowAgent",
                        "UnknownByClient"
                    ]
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ContextRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForAllUsers": {
                    "type": "boolean"
                },
                "IncludeAdditionalDateColumns": {
                    "type": "boolean"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeWorkItems": {
                    "type": "boolean"
                },
                "ProcessDefinition": {
                    "$ref": "#/definitions/Link"
                },
                "SortExpression": {
                    "type": "string"
                },
                "WorkflowType": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "ActivityInstancesFilter"
            },
            "type": "object"
        },
        "ApprovalStatusesFilter": {
            "properties": {
                "$type": {
                    "example": "ApprovalStatusesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ApprovalStatusesFilter"
            },
            "type": "object"
        },
        "ProcessDefinitionAssociationsFilter": {
            "properties": {
                "$type": {
                    "example": "ProcessDefinitionAssociationsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ContextRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "ProcessDefinition": {
                    "$ref": "#/definitions/Link"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ProcessDefinitionAssociationsFilter"
            },
            "type": "object"
        },
        "ProcessDefinitionsFilter": {
            "properties": {
                "$type": {
                    "example": "ProcessDefinitionsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ContextRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ProcessDefinitionsFilter"
            },
            "type": "object"
        },
        "ProcessesFilter": {
            "properties": {
                "$type": {
                    "example": "ProcessesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForPerformer": {
                    "$ref": "#/definitions/Link"
                },
                "ForProcessDefinition": {
                    "$ref": "#/definitions/Link"
                },
                "ForRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ForSubject": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeSubjectsColumn": {
                    "type": "boolean"
                },
                "IncludeWorkflowTypeColumns": {
                    "type": "boolean"
                },
                "LegacyMode": {
                    "type": "boolean"
                },
                "ProcessType": {
                    "type": "string",
                    "enum": [
                        "Any",
                        "Active",
                        "Historical",
                        "UnknownByClient"
                    ]
                },
                "SortExpression": {
                    "type": "string"
                },
                "WorkflowType": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "ProcessesFilter"
            },
            "type": "object"
        },
        "UserWorkItemsFilter": {
            "properties": {
                "$type": {
                    "example": "UserWorkItemsFilter",
                    "type": "string"
                },
                "ActivityState": {
                    "type": "string",
                    "enum": [
                        "Assigned",
                        "Started",
                        "Failed",
                        "Finished",
                        "Suspended",
                        "WaitingForWorkflowAgent",
                        "UnknownByClient"
                    ]
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ContextRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                },
                "Subject": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "UserWorkItemsFilter"
            },
            "type": "object"
        },
        "WorkflowManagerFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "WorkflowManagerFilter"
            },
            "type": "object"
        },
        "WorkflowTypesFilter": {
            "properties": {
                "$type": {
                    "example": "WorkflowTypesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "WorkflowTypesFilter"
            },
            "type": "object"
        },
        "ClaimMappingsFilter": {
            "properties": {
                "$type": {
                    "example": "ClaimMappingsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForGroup": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ClaimMappingsFilter"
            },
            "type": "object"
        },
        "GroupMembersFilter": {
            "properties": {
                "$type": {
                    "example": "GroupMembersFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ContextRepository": {
                    "$ref": "#/definitions/Link"
                },
                "ExcludeDisabledTrustees": {
                    "type": "boolean"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "Recursive": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "GroupMembersFilter"
            },
            "type": "object"
        },
        "GroupsFilter": {
            "properties": {
                "$type": {
                    "example": "GroupsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForRepository": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsPredefined": {
                    "type": "boolean"
                },
                "ItemType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Publication",
                        "Folder",
                        "StructureGroup",
                        "Schema",
                        "Component",
                        "ComponentTemplate",
                        "Page",
                        "PageTemplate",
                        "TargetGroup",
                        "Category",
                        "Keyword",
                        "TemplateBuildingBlock",
                        "BusinessProcessType",
                        "VirtualFolder",
                        "PublicationTarget",
                        "TargetType",
                        "TargetDestination",
                        "MultimediaType",
                        "User",
                        "Group",
                        "DirectoryService",
                        "DirectoryGroupMapping",
                        "Batch",
                        "MultipleOperations",
                        "PublishTransaction",
                        "WorkflowType",
                        "ApprovalStatus",
                        "ProcessDefinition",
                        "ProcessInstance",
                        "ProcessHistory",
                        "ActivityDefinition",
                        "ActivityInstance",
                        "ActivityHistory",
                        "WorkItem"
                    ]
                },
                "Name": {
                    "type": "string"
                },
                "NameSearchMode": {
                    "type": "string",
                    "enum": [
                        "Contains",
                        "StartsWith",
                        "EndsWith",
                        "ExactMatch"
                    ]
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "GroupsFilter"
            },
            "type": "object"
        },
        "TrusteesFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsPredefined": {
                    "type": "boolean"
                },
                "ItemType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Publication",
                        "Folder",
                        "StructureGroup",
                        "Schema",
                        "Component",
                        "ComponentTemplate",
                        "Page",
                        "PageTemplate",
                        "TargetGroup",
                        "Category",
                        "Keyword",
                        "TemplateBuildingBlock",
                        "BusinessProcessType",
                        "VirtualFolder",
                        "PublicationTarget",
                        "TargetType",
                        "TargetDestination",
                        "MultimediaType",
                        "User",
                        "Group",
                        "DirectoryService",
                        "DirectoryGroupMapping",
                        "Batch",
                        "MultipleOperations",
                        "PublishTransaction",
                        "WorkflowType",
                        "ApprovalStatus",
                        "ProcessDefinition",
                        "ProcessInstance",
                        "ProcessHistory",
                        "ActivityDefinition",
                        "ActivityInstance",
                        "ActivityHistory",
                        "WorkItem"
                    ]
                },
                "Name": {
                    "type": "string"
                },
                "NameSearchMode": {
                    "type": "string",
                    "enum": [
                        "Contains",
                        "StartsWith",
                        "EndsWith",
                        "ExactMatch"
                    ]
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "TrusteesFilter"
            },
            "type": "object"
        },
        "UsersFilter": {
            "properties": {
                "$type": {
                    "example": "UsersFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsPredefined": {
                    "type": "boolean"
                },
                "ItemType": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Publication",
                        "Folder",
                        "StructureGroup",
                        "Schema",
                        "Component",
                        "ComponentTemplate",
                        "Page",
                        "PageTemplate",
                        "TargetGroup",
                        "Category",
                        "Keyword",
                        "TemplateBuildingBlock",
                        "BusinessProcessType",
                        "VirtualFolder",
                        "PublicationTarget",
                        "TargetType",
                        "TargetDestination",
                        "MultimediaType",
                        "User",
                        "Group",
                        "DirectoryService",
                        "DirectoryGroupMapping",
                        "Batch",
                        "MultipleOperations",
                        "PublishTransaction",
                        "WorkflowType",
                        "ApprovalStatus",
                        "ProcessDefinition",
                        "ProcessInstance",
                        "ProcessHistory",
                        "ActivityDefinition",
                        "ActivityInstance",
                        "ActivityHistory",
                        "WorkItem"
                    ]
                },
                "Name": {
                    "type": "string"
                },
                "NameSearchMode": {
                    "type": "string",
                    "enum": [
                        "Contains",
                        "StartsWith",
                        "EndsWith",
                        "ExactMatch"
                    ]
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "UsersFilter"
            },
            "type": "object"
        },
        "PublishedItemsFilter": {
            "properties": {
                "$type": {
                    "example": "PublishedItemsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForPublication": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludePathColumn": {
                    "type": "boolean"
                },
                "IncludeTemplates": {
                    "type": "boolean"
                },
                "PublicationTarget": {
                    "$ref": "#/definitions/Link"
                },
                "Purpose": {
                    "type": "string"
                },
                "ResultLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "SortExpression": {
                    "type": "string"
                },
                "TargetType": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "PublishedItemsFilter"
            },
            "type": "object"
        },
        "PublishingListFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PublishingListFilter"
            },
            "type": "object"
        },
        "BlueprintChainFilter": {
            "properties": {
                "$type": {
                    "example": "BlueprintChainFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "Direction": {
                    "type": "string",
                    "enum": [
                        "Up",
                        "Down"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BlueprintChainFilter"
            },
            "type": "object"
        },
        "BlueprintFilter": {
            "properties": {
                "$type": {
                    "example": "BlueprintFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForItem": {
                    "$ref": "#/definitions/Link"
                },
                "ForRepository": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BlueprintFilter"
            },
            "type": "object"
        },
        "BlueprintNodesFilter": {
            "properties": {
                "$type": {
                    "example": "BlueprintNodesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForItem": {
                    "$ref": "#/definitions/Link"
                },
                "ForRepository": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BlueprintNodesFilter"
            },
            "type": "object"
        },
        "BlueprintParentsFilter": {
            "properties": {
                "$type": {
                    "example": "BlueprintParentsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "CurrentParents": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForRepository": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BlueprintParentsFilter"
            },
            "type": "object"
        },
        "BundleSchemasFilter": {
            "properties": {
                "$type": {
                    "example": "BundleSchemasFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "OnlyApplicableBundles": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BundleSchemasFilter"
            },
            "type": "object"
        },
        "CategoriesFilter": {
            "properties": {
                "$type": {
                    "example": "CategoriesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsRoot": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CategoriesFilter"
            },
            "type": "object"
        },
        "CategoryRelatedFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "CategoryRelatedFilter"
            },
            "type": "object"
        },
        "ChildCategoriesFilter": {
            "properties": {
                "$type": {
                    "example": "ChildCategoriesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsRoot": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ChildCategoriesFilter"
            },
            "type": "object"
        },
        "ChildKeywordsFilter": {
            "properties": {
                "$type": {
                    "example": "ChildKeywordsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "InCategory": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsAbstract": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ChildKeywordsFilter"
            },
            "type": "object"
        },
        "ClassifiedItemsFilter": {
            "properties": {
                "$type": {
                    "example": "ClassifiedItemsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "BasedOnSchemas": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ResolveDescendantKeywords": {
                    "type": "boolean"
                },
                "ResultLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ClassifiedItemsFilter"
            },
            "type": "object"
        },
        "DeletedReferencesFilter": {
            "properties": {
                "$type": {
                    "example": "DeletedReferencesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "DeletedReferencesFilter"
            },
            "type": "object"
        },
        "DescendantKeywordsFilter": {
            "properties": {
                "$type": {
                    "example": "DescendantKeywordsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "InContextRepositoryOnly": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "DescendantKeywordsFilter"
            },
            "type": "object"
        },
        "ItemsFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ComponentTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Normal",
                            "Multimedia",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "ComponentType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeDescriptionColumn": {
                    "type": "boolean"
                },
                "IncludeRelativeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "LockFilter": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "LockResult": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "Recursive": {
                    "type": "boolean"
                },
                "SchemaPurposes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Component",
                            "Multimedia",
                            "Embedded",
                            "Metadata",
                            "Protocol",
                            "VirtualFolderType",
                            "TemplateParameters",
                            "Bundle",
                            "Region",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "SchemaPurpose",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ShowDynamicVersionIfReadableByUser": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ItemsFilter"
            },
            "type": "object"
        },
        "KeywordRelatedFilter": {
            "properties": {
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "KeywordRelatedFilter"
            },
            "type": "object"
        },
        "KeywordsFilter": {
            "properties": {
                "$type": {
                    "example": "KeywordsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IsAbstract": {
                    "type": "boolean"
                },
                "IsRoot": {
                    "type": "boolean"
                },
                "ResultLimit": {
                    "type": "integer",
                    "format": "int32"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "KeywordsFilter"
            },
            "type": "object"
        },
        "MultimediaTypesFilter": {
            "properties": {
                "$type": {
                    "example": "MultimediaTypesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "MultimediaTypesFilter"
            },
            "type": "object"
        },
        "OrganizationalItemAncestorsFilter": {
            "properties": {
                "$type": {
                    "example": "OrganizationalItemAncestorsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludePublishLocationColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "OrganizationalItemAncestorsFilter"
            },
            "type": "object"
        },
        "OrganizationalItemItemsFilter": {
            "properties": {
                "$type": {
                    "example": "OrganizationalItemItemsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "BasedOnSchemas": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ComponentTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Normal",
                            "Multimedia",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "ComponentType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "FailIfNoAccessToItems": {
                    "type": "boolean"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeDescriptionColumn": {
                    "type": "boolean"
                },
                "IncludePathColumn": {
                    "type": "boolean"
                },
                "IncludeRelativeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "LockFilter": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "LockResult": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "NotBasedOnSchema": {
                    "$ref": "#/definitions/Link"
                },
                "Recursive": {
                    "type": "boolean"
                },
                "SchemaPurposes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Component",
                            "Multimedia",
                            "Embedded",
                            "Metadata",
                            "Protocol",
                            "VirtualFolderType",
                            "TemplateParameters",
                            "Bundle",
                            "Region",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "SchemaPurpose",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ShowDynamicVersionIfReadableByUser": {
                    "type": "boolean"
                },
                "ShowNewItems": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                },
                "TemplateTypeIds": {
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "OrganizationalItemItemsFilter"
            },
            "type": "object"
        },
        "OrganizationalItemsFilter": {
            "properties": {
                "$type": {
                    "example": "OrganizationalItemsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExcludeTrustees": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludePathColumn": {
                    "type": "boolean"
                },
                "IncludeRelativeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "IncludeTrustees": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "OrganizationalItemsFilter"
            },
            "type": "object"
        },
        "OrphanKeywordsFilter": {
            "properties": {
                "$type": {
                    "example": "OrphanKeywordsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "RootCategory": {
                    "$ref": "#/definitions/Link"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "OrphanKeywordsFilter"
            },
            "type": "object"
        },
        "PathToCategoryFilter": {
            "properties": {
                "$type": {
                    "example": "PathToCategoryFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PathToCategoryFilter"
            },
            "type": "object"
        },
        "RepositoriesFilter": {
            "properties": {
                "$type": {
                    "example": "RepositoriesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeAllPublicationsForGroupManagement": {
                    "type": "boolean"
                },
                "IncludeRootOrganizationalItemsColumns": {
                    "type": "boolean"
                },
                "IncludeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "RepositoriesFilter"
            },
            "type": "object"
        },
        "RepositoryItemsFilter": {
            "properties": {
                "$type": {
                    "example": "RepositoryItemsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ComponentTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Normal",
                            "Multimedia",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "ComponentType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeDescriptionColumn": {
                    "type": "boolean"
                },
                "IncludeRelativeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "LockFilter": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "LockResult": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "Recursive": {
                    "type": "boolean"
                },
                "SchemaPurposes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Component",
                            "Multimedia",
                            "Embedded",
                            "Metadata",
                            "Protocol",
                            "VirtualFolderType",
                            "TemplateParameters",
                            "Bundle",
                            "Region",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "SchemaPurpose",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ShowDynamicVersionIfReadableByUser": {
                    "type": "boolean"
                },
                "ShowNewItems": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "RepositoryItemsFilter"
            },
            "type": "object"
        },
        "RepositoryLocalObjectsFilter": {
            "properties": {
                "$type": {
                    "example": "RepositoryLocalObjectsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "BasedOnSchemas": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ComponentTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Normal",
                            "Multimedia",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "ComponentType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeDescriptionColumn": {
                    "type": "boolean"
                },
                "IncludeDynamicVersionInfoColumns": {
                    "type": "boolean"
                },
                "IncludeLocationInfoColumns": {
                    "type": "boolean"
                },
                "IncludeLockUserColumn": {
                    "type": "boolean"
                },
                "IncludeRelativeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "ItemIds": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "ItemTypes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "None",
                            "Publication",
                            "Folder",
                            "StructureGroup",
                            "Schema",
                            "Component",
                            "ComponentTemplate",
                            "Page",
                            "PageTemplate",
                            "TargetGroup",
                            "Category",
                            "Keyword",
                            "TemplateBuildingBlock",
                            "BusinessProcessType",
                            "VirtualFolder",
                            "PublicationTarget",
                            "TargetType",
                            "TargetDestination",
                            "MultimediaType",
                            "User",
                            "Group",
                            "DirectoryService",
                            "DirectoryGroupMapping",
                            "Batch",
                            "MultipleOperations",
                            "PublishTransaction",
                            "WorkflowType",
                            "ApprovalStatus",
                            "ProcessDefinition",
                            "ProcessInstance",
                            "ProcessHistory",
                            "ActivityDefinition",
                            "ActivityInstance",
                            "ActivityHistory",
                            "WorkItem"
                        ]
                    },
                    "xml": {
                        "name": "ItemType",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "LockFilter": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "LockResult": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "CheckedOut",
                        "Permanent",
                        "NewItem",
                        "InWorkflow",
                        "Reserved"
                    ]
                },
                "LockUser": {
                    "$ref": "#/definitions/Link"
                },
                "SchemaPurposes": {
                    "items": {
                        "type": "string",
                        "enum": [
                            "UnknownByClient",
                            "Component",
                            "Multimedia",
                            "Embedded",
                            "Metadata",
                            "Protocol",
                            "VirtualFolderType",
                            "TemplateParameters",
                            "Bundle",
                            "Region",
                            "Widget"
                        ]
                    },
                    "xml": {
                        "name": "SchemaPurpose",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SortExpression": {
                    "type": "string"
                },
                "TemplateTypeIds": {
                    "items": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": "array"
                },
                "UseDynamicVersion": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "RepositoryLocalObjectsFilter"
            },
            "type": "object"
        },
        "TaxonomiesFilter": {
            "properties": {
                "$type": {
                    "example": "TaxonomiesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForItems": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                },
                "UseForNavigation": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "TaxonomiesFilter"
            },
            "type": "object"
        },
        "TaxonomiesOwlFilter": {
            "properties": {
                "$type": {
                    "example": "TaxonomiesOwlFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForItems": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "RootCategories": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SortExpression": {
                    "type": "string"
                },
                "UseForNavigation": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "TaxonomiesOwlFilter"
            },
            "type": "object"
        },
        "VersionsFilter": {
            "properties": {
                "$type": {
                    "example": "VersionsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeRevisorDescriptionColumn": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "VersionsFilter"
            },
            "type": "object"
        },
        "ComponentTemplatesFilter": {
            "properties": {
                "$type": {
                    "example": "ComponentTemplatesFilter",
                    "type": "string"
                },
                "AllowedOnPage": {
                    "type": "boolean"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "RelatedTo": {
                    "items": {
                        "$ref": "#/definitions/Link"
                    },
                    "xml": {
                        "name": "Link",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "ComponentTemplatesFilter"
            },
            "type": "object"
        },
        "PublicationsFilter": {
            "properties": {
                "$type": {
                    "example": "PublicationsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeAllPublicationsForGroupManagement": {
                    "type": "boolean"
                },
                "IncludeRootOrganizationalItemsColumns": {
                    "type": "boolean"
                },
                "IncludeWebDavUrlColumn": {
                    "type": "boolean"
                },
                "PublicationTypeName": {
                    "type": "string"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PublicationsFilter"
            },
            "type": "object"
        },
        "PublicationTargetsFilter": {
            "properties": {
                "$type": {
                    "example": "PublicationTargetsFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "IncludeEmulated": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PublicationTargetsFilter"
            },
            "type": "object"
        },
        "TargetTypesFilter": {
            "properties": {
                "$type": {
                    "example": "TargetTypesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "ForRepository": {
                    "$ref": "#/definitions/Link"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "TargetTypesFilter"
            },
            "type": "object"
        },
        "BatchesFilter": {
            "properties": {
                "$type": {
                    "example": "BatchesFilter",
                    "type": "string"
                },
                "BaseColumns": {
                    "type": "string",
                    "enum": [
                        "Id",
                        "IdAndTitle",
                        "Default",
                        "Extended"
                    ]
                },
                "ExtensionProperties": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "IncludeAllowedActionsColumns": {
                    "type": "boolean"
                },
                "SortExpression": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BatchesFilter"
            },
            "type": "object"
        },
        "RegisteredType": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "Name": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "RegisteredType"
            },
            "type": "object"
        },
        "SystemWideObject": {
            "allOf": [
                {
                    "$ref": "#/definitions/IdentifiableObject"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "xml": {
                "name": "SystemWideObject"
            },
            "type": "object"
        },
        "ActivityDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ActivityConstraints": {
                            "type": "string",
                            "enum": [
                                "None",
                                "DenyBundleMetadataEditing",
                                "DenySubjectEditing",
                                "DenyAddRemoveWorkItem",
                                "UnknownByClient"
                            ]
                        },
                        "Assignee": {
                            "$ref": "#/definitions/Link"
                        },
                        "Description": {
                            "type": "string"
                        },
                        "ProcessDefinition": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ActivityDefinition"
            },
            "type": "object"
        },
        "ActivityHistory": {
            "allOf": [
                {
                    "$ref": "#/definitions/Activity"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ActivityDefinitionTitle": {
                            "type": "string"
                        },
                        "ActivityType": {
                            "type": "string",
                            "enum": [
                                "Normal",
                                "Decision",
                                "UnknownByClient"
                            ]
                        },
                        "ApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "Description": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ActivityHistory"
            },
            "type": "object"
        },
        "ApprovalStatus": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "IsDeleted": {
                            "type": "boolean"
                        },
                        "Position": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ApprovalStatus"
            },
            "type": "object"
        },
        "Process": {
            "allOf": [
                {
                    "$ref": "#/definitions/WorkflowObject"
                },
                {
                    "properties": {
                        "Activities": {
                            "items": {
                                "$ref": "#/definitions/Activity"
                            },
                            "xml": {
                                "name": "Activity",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Creator": {
                            "$ref": "#/definitions/Link"
                        },
                        "HasSnapshots": {
                            "type": "boolean"
                        },
                        "Subjects": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "WorkflowType": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Process"
            },
            "type": "object"
        },
        "ProcessDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/RepositoryLocalObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ActivityDefinitions": {
                            "items": {
                                "$ref": "#/definitions/ActivityDefinition"
                            },
                            "xml": {
                                "name": "ActivityDefinition",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "StoreSnapshot": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ProcessDefinition"
            },
            "type": "object"
        },
        "ProcessDefinitionAssociation": {
            "allOf": [
                {
                    "$ref": "#/definitions/IdentifiableObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ProcessDefinition": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ProcessDefinitionAssociation"
            },
            "type": "object"
        },
        "TridionActivityDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ActivityDefinition"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ActivityType": {
                            "type": "string",
                            "enum": [
                                "Normal",
                                "Decision",
                                "UnknownByClient"
                            ]
                        },
                        "AllowOverrideDueDate": {
                            "type": "boolean"
                        },
                        "ExpirationScript": {
                            "type": "string"
                        },
                        "ExpirationScriptType": {
                            "type": "string"
                        },
                        "FinishApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "NextActivityDefinitions": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "PerformingTimeout": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "Script": {
                            "type": "string"
                        },
                        "ScriptType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "TridionActivityDefinition"
            },
            "type": "object"
        },
        "TridionProcessDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ProcessDefinition"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Diagram": {
                            "type": "string",
                            "format": "byte"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "TridionProcessDefinition"
            },
            "type": "object"
        },
        "WorkflowObject": {
            "allOf": [
                {
                    "$ref": "#/definitions/IdentifiableObject"
                },
                {
                    "properties": {
                        "ContextRepository": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "WorkflowObject"
            },
            "type": "object"
        },
        "WorkflowType": {
            "allOf": [
                {
                    "$ref": "#/definitions/RegisteredType"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "WorkflowType"
            },
            "type": "object"
        },
        "AccessToken": {
            "allOf": [
                {
                    "$ref": "#/definitions/User"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ExpiresAt": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "InheritedSystemPrivileges": {
                            "additionalProperties": {
                                "items": {
                                    "$ref": "#/definitions/Link"
                                },
                                "xml": {
                                    "name": "Link",
                                    "wrapped": true
                                },
                                "type": "array"
                            },
                            "type": "object"
                        },
                        "Signature": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "AccessToken"
            },
            "type": "object"
        },
        "ClaimMapping": {
            "properties": {
                "$type": {
                    "example": "ClaimMapping",
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "Group": {
                    "$ref": "#/definitions/Link"
                }
            },
            "xml": {
                "name": "ClaimMapping"
            },
            "type": "object"
        },
        "LinkWithIsEditable": {
            "properties": {
                "IdRef": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "$type": {
                    "example": "LinkWithIsEditable",
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "IsEditable": {
                    "type": "boolean"
                },
                "WebDavUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "LinkWithIsEditable"
            },
            "type": "object"
        },
        "Group": {
            "allOf": [
                {
                    "$ref": "#/definitions/Trustee"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ClaimMappings": {
                            "items": {
                                "$ref": "#/definitions/ClaimMapping"
                            },
                            "xml": {
                                "name": "ClaimMapping",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "DefaultGroupId": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "InheritedSystemPrivileges": {
                            "additionalProperties": {
                                "items": {
                                    "$ref": "#/definitions/Link"
                                },
                                "xml": {
                                    "name": "Link",
                                    "wrapped": true
                                },
                                "type": "array"
                            },
                            "type": "object"
                        },
                        "Scope": {
                            "items": {
                                "$ref": "#/definitions/LinkWithIsEditable"
                            },
                            "xml": {
                                "name": "LinkWithIsEditable",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "SystemPrivileges": {
                            "items": {
                                "$ref": "#/definitions/SystemPrivilege"
                            },
                            "xml": {
                                "name": "SystemPrivilege",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Group"
            },
            "type": "object"
        },
        "Trustee": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Description": {
                            "type": "string"
                        },
                        "GroupMemberships": {
                            "items": {
                                "$ref": "#/definitions/GroupMembership"
                            },
                            "xml": {
                                "name": "GroupMembership",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "IsPredefined": {
                            "type": "boolean"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Trustee"
            },
            "type": "object"
        },
        "BlueprintNode": {
            "allOf": [
                {
                    "$ref": "#/definitions/Publication"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Item": {
                            "$ref": "#/definitions/RepositoryLocalObject"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "BlueprintNode"
            },
            "type": "object"
        },
        "BundleType": {
            "allOf": [
                {
                    "$ref": "#/definitions/Schema"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "MappedItems": {
                            "items": {
                                "type": "string"
                            },
                            "readOnly": true,
                            "type": "array"
                        },
                        "ResolvedBundles": {
                            "items": {
                                "$ref": "#/definitions/ResolvedBundle"
                            },
                            "readOnly": true,
                            "xml": {
                                "name": "ResolvedBundle",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "BundleType"
            },
            "type": "object"
        },
        "ResolvedBundle": {
            "allOf": [
                {
                    "$ref": "#/definitions/VirtualFolder"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ResolvedBundle"
            },
            "type": "object"
        },
        "WorkflowInfo": {
            "properties": {
                "$type": {
                    "example": "WorkflowInfo",
                    "type": "string"
                },
                "ActivityConstraints": {
                    "type": "string",
                    "enum": [
                        "None",
                        "DenyBundleMetadataEditing",
                        "DenySubjectEditing",
                        "DenyAddRemoveWorkItem",
                        "UnknownByClient"
                    ]
                },
                "ActivityDefinitionDescription": {
                    "type": "string"
                },
                "ActivityInstance": {
                    "$ref": "#/definitions/Link"
                },
                "ActivityState": {
                    "type": "string",
                    "enum": [
                        "Assigned",
                        "Started",
                        "Failed",
                        "Finished",
                        "Suspended",
                        "WaitingForWorkflowAgent",
                        "UnknownByClient"
                    ]
                },
                "Assignee": {
                    "$ref": "#/definitions/Link"
                },
                "AssignmentDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "CreationDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "DueDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "FinishDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "Performer": {
                    "$ref": "#/definitions/Link"
                },
                "PreviousMessage": {
                    "type": "string"
                },
                "ProcessInstance": {
                    "$ref": "#/definitions/Link"
                },
                "StartDate": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "WorkflowInfo"
            },
            "type": "object"
        },
        "Category": {
            "allOf": [
                {
                    "$ref": "#/definitions/OrganizationalItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "AllowedParentCategories": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Description": {
                            "type": "string"
                        },
                        "IsTaxonomyRoot": {
                            "type": "boolean"
                        },
                        "KeywordMetadataSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "UseForIdentification": {
                            "type": "boolean"
                        },
                        "UseForNavigation": {
                            "type": "boolean"
                        },
                        "XmlName": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Category"
            },
            "type": "object"
        },
        "Component": {
            "allOf": [
                {
                    "$ref": "#/definitions/VersionedItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "BinaryContent": {
                            "$ref": "#/definitions/BinaryContent"
                        },
                        "ComponentType": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "Normal",
                                "Multimedia",
                                "Widget"
                            ]
                        },
                        "Content": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        },
                        "IsBasedOnMandatorySchema": {
                            "type": "boolean"
                        },
                        "IsBasedOnTridionWebSchema": {
                            "type": "boolean"
                        },
                        "Schema": {
                            "$ref": "#/definitions/Link"
                        },
                        "WorkflowInfo": {
                            "$ref": "#/definitions/WorkflowInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Component"
            },
            "type": "object"
        },
        "Folder": {
            "allOf": [
                {
                    "$ref": "#/definitions/OrganizationalItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "IsLinkedSchemaMandatory": {
                            "type": "boolean"
                        },
                        "LinkedSchema": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Folder"
            },
            "type": "object"
        },
        "Keyword": {
            "allOf": [
                {
                    "$ref": "#/definitions/RepositoryLocalObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Description": {
                            "type": "string"
                        },
                        "IsAbstract": {
                            "type": "boolean"
                        },
                        "IsRoot": {
                            "type": "boolean"
                        },
                        "Key": {
                            "type": "string"
                        },
                        "ParentKeywords": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "RelatedKeywords": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Keyword"
            },
            "type": "object"
        },
        "MultimediaType": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "FileExtensions": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "MimeType": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "MultimediaType"
            },
            "type": "object"
        },
        "Repository": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "AccessControlList": {
                            "$ref": "#/definitions/AccessControlList"
                        },
                        "BusinessProcessType": {
                            "$ref": "#/definitions/Link"
                        },
                        "CategoriesXsd": {
                            "type": "string"
                        },
                        "ContentSecurityDescriptor": {
                            "$ref": "#/definitions/SecurityDescriptor"
                        },
                        "DefaultMultimediaSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "HasChildren": {
                            "type": "boolean"
                        },
                        "Key": {
                            "type": "string"
                        },
                        "LocationInfo": {
                            "$ref": "#/definitions/LocationInfo"
                        },
                        "Metadata": {
                            "additionalProperties": {
                                "type": "object"
                            },
                            "type": "object"
                        },
                        "MetadataSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "MinimalLocalizeApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "Parents": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "RootFolder": {
                            "$ref": "#/definitions/Link"
                        },
                        "TaskProcess": {
                            "$ref": "#/definitions/Link"
                        },
                        "VersionInfo": {
                            "$ref": "#/definitions/LimitedVersionInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Repository"
            },
            "type": "object"
        },
        "VirtualFolder": {
            "allOf": [
                {
                    "$ref": "#/definitions/OrganizationalItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "Configuration": {
                            "type": "string"
                        },
                        "Description": {
                            "type": "string"
                        },
                        "TypeSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "WorkflowInfo": {
                            "$ref": "#/definitions/WorkflowInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "VirtualFolder"
            },
            "type": "object"
        },
        "BusinessProcessType": {
            "allOf": [
                {
                    "$ref": "#/definitions/OrganizationalItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "BundleSchemas": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "CdTopologyTypeId": {
                            "type": "string"
                        },
                        "Description": {
                            "type": "string"
                        },
                        "TargetTypes": {
                            "items": {
                                "$ref": "#/definitions/TargetType"
                            },
                            "xml": {
                                "name": "TargetType",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "BusinessProcessType"
            },
            "type": "object"
        },
        "TargetType": {
            "allOf": [
                {
                    "$ref": "#/definitions/PublishingTarget"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "AccessControlList": {
                            "$ref": "#/definitions/AccessControlList"
                        },
                        "BusinessProcessType": {
                            "$ref": "#/definitions/Link"
                        },
                        "ContentSecurityDescriptor": {
                            "$ref": "#/definitions/SecurityDescriptor"
                        },
                        "MinimalApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "Priority": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "Low",
                                "Normal",
                                "High"
                            ]
                        },
                        "Purpose": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "TargetType"
            },
            "type": "object"
        },
        "ComponentTemplate": {
            "allOf": [
                {
                    "$ref": "#/definitions/Template"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "AllowOnPage": {
                            "type": "boolean"
                        },
                        "ApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "DynamicTemplate": {
                            "type": "string"
                        },
                        "IsRepositoryPublishable": {
                            "type": "boolean"
                        },
                        "OutputFormat": {
                            "type": "string"
                        },
                        "Priority": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "RelatedSchemas": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "TrackingCategories": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "WorkflowInfo": {
                            "$ref": "#/definitions/WorkflowInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ComponentTemplate"
            },
            "type": "object"
        },
        "PublishLocationInfo": {
            "properties": {
                "$type": {
                    "example": "PublishLocationInfo",
                    "type": "string"
                },
                "ContextRepository": {
                    "$ref": "#/definitions/Link"
                },
                "OrganizationalItem": {
                    "$ref": "#/definitions/Link"
                },
                "Path": {
                    "type": "string"
                },
                "PublishLocationPath": {
                    "type": "string"
                },
                "PublishLocationUrl": {
                    "type": "string"
                },
                "PublishPath": {
                    "type": "string"
                },
                "WebDavUrl": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "PublishLocationInfo"
            },
            "type": "object"
        },
        "Page": {
            "allOf": [
                {
                    "$ref": "#/definitions/VersionedItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "ComponentPresentations": {
                            "items": {
                                "$ref": "#/definitions/ComponentPresentation"
                            },
                            "xml": {
                                "name": "ComponentPresentation",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "FileName": {
                            "type": "string"
                        },
                        "IsPageTemplateInherited": {
                            "type": "boolean"
                        },
                        "LocationInfo": {
                            "$ref": "#/definitions/PublishLocationInfo"
                        },
                        "MetadataSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "PageTemplate": {
                            "$ref": "#/definitions/Link"
                        },
                        "Regions": {
                            "items": {
                                "$ref": "#/definitions/Region"
                            },
                            "xml": {
                                "name": "Region",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "RegionSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "WorkflowInfo": {
                            "$ref": "#/definitions/WorkflowInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Page"
            },
            "type": "object"
        },
        "PageTemplate": {
            "allOf": [
                {
                    "$ref": "#/definitions/Template"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "FileExtension": {
                            "type": "string"
                        },
                        "PageSchema": {
                            "$ref": "#/definitions/Link"
                        },
                        "WorkflowInfo": {
                            "$ref": "#/definitions/WorkflowInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "PageTemplate"
            },
            "type": "object"
        },
        "Publication": {
            "allOf": [
                {
                    "$ref": "#/definitions/Repository"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ComponentSnapshotTemplate": {
                            "$ref": "#/definitions/Link"
                        },
                        "ComponentTemplateProcess": {
                            "$ref": "#/definitions/Link"
                        },
                        "DefaultComponentTemplate": {
                            "$ref": "#/definitions/Link"
                        },
                        "DefaultPageTemplate": {
                            "$ref": "#/definitions/Link"
                        },
                        "DefaultTemplateBuildingBlock": {
                            "$ref": "#/definitions/Link"
                        },
                        "MultimediaPath": {
                            "type": "string"
                        },
                        "MultimediaUrl": {
                            "type": "string"
                        },
                        "PageSnapshotTemplate": {
                            "$ref": "#/definitions/Link"
                        },
                        "PageTemplateProcess": {
                            "$ref": "#/definitions/Link"
                        },
                        "PublicationPath": {
                            "type": "string"
                        },
                        "PublicationType": {
                            "type": "string"
                        },
                        "PublicationUrl": {
                            "type": "string"
                        },
                        "RootStructureGroup": {
                            "$ref": "#/definitions/Link"
                        },
                        "ShareProcessAssociations": {
                            "type": "boolean"
                        },
                        "TemplateBundleProcess": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Publication"
            },
            "type": "object"
        },
        "PublishingTarget": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Description": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "PublishingTarget"
            },
            "type": "object"
        },
        "StructureGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/OrganizationalItem"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "DefaultPageTemplate": {
                            "$ref": "#/definitions/Link"
                        },
                        "Directory": {
                            "type": "string"
                        },
                        "IsActive": {
                            "type": "boolean"
                        },
                        "IsActiveResolvedValue": {
                            "type": "boolean"
                        },
                        "IsDefaultPageTemplateInherited": {
                            "type": "boolean"
                        },
                        "LocationInfo": {
                            "$ref": "#/definitions/PublishLocationInfo"
                        },
                        "PageBundleProcess": {
                            "$ref": "#/definitions/Link"
                        },
                        "PageProcess": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "StructureGroup"
            },
            "type": "object"
        },
        "TemplateBuildingBlock": {
            "allOf": [
                {
                    "$ref": "#/definitions/Template"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ApprovalStatus": {
                            "$ref": "#/definitions/Link"
                        },
                        "TemplatePurpose": {
                            "type": "string",
                            "enum": [
                                "UnknownByClient",
                                "Rendering",
                                "Data"
                            ]
                        },
                        "WorkflowInfo": {
                            "$ref": "#/definitions/WorkflowInfo"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "TemplateBuildingBlock"
            },
            "type": "object"
        },
        "BatchOperation": {
            "properties": {
                "$type": {
                    "example": "BatchOperation",
                    "type": "string"
                },
                "Operation": {
                    "type": "string"
                },
                "Parameters": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "type": "object"
                },
                "Statuses": {
                    "items": {
                        "$ref": "#/definitions/BatchOperationStatus"
                    },
                    "readOnly": true,
                    "xml": {
                        "name": "BatchOperationStatus",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "SubjectLinks": {
                    "items": {
                        "$ref": "#/definitions/WeakLink"
                    },
                    "xml": {
                        "name": "WeakLink",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchOperation"
            },
            "type": "object"
        },
        "BatchOperationStatus": {
            "properties": {
                "$type": {
                    "example": "BatchOperationStatus",
                    "type": "string"
                },
                "ErrorCode": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int32"
                },
                "Information": {
                    "type": "string"
                },
                "State": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "NotStarted",
                        "Success",
                        "Warning",
                        "Error"
                    ]
                },
                "SubjectId": {
                    "type": "string"
                },
                "ValidationErrors": {
                    "items": {
                        "$ref": "#/definitions/ValidationError"
                    },
                    "xml": {
                        "name": "ValidationError",
                        "wrapped": true
                    },
                    "type": "array"
                },
                "ValidationWarnings": {
                    "items": {
                        "$ref": "#/definitions/ValidationWarning"
                    },
                    "xml": {
                        "name": "ValidationWarning",
                        "wrapped": true
                    },
                    "type": "array"
                }
            },
            "xml": {
                "name": "BatchOperationStatus"
            },
            "type": "object"
        },
        "Batch": {
            "allOf": [
                {
                    "$ref": "#/definitions/SystemWideObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "NumberOfDoneOperations": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                        },
                        "Operations": {
                            "items": {
                                "$ref": "#/definitions/BatchOperation"
                            },
                            "xml": {
                                "name": "BatchOperation",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Performer": {
                            "$ref": "#/definitions/Link"
                        },
                        "PerformerAccessToken": {
                            "$ref": "#/definitions/AccessToken"
                        },
                        "StartAt": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "TotalNumberOfOperations": {
                            "readOnly": true,
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "Batch"
            },
            "type": "object"
        },
        "TargetGroup": {
            "allOf": [
                {
                    "$ref": "#/definitions/RepositoryLocalObject"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "Conditions": {
                            "items": {
                                "$ref": "#/definitions/Condition"
                            },
                            "xml": {
                                "name": "Condition",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Description": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "TargetGroup"
            },
            "type": "object"
        },
        "Condition": {
            "properties": {
                "$type": {
                    "example": "Condition",
                    "type": "string"
                },
                "Negate": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "Condition"
            },
            "type": "object"
        },
        "ItemField": {
            "properties": {
                "Definition": {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                "Name": {
                    "type": "string"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "ItemFieldType",
            "xml": {
                "name": "ItemField"
            },
            "type": "object"
        },
        "ItemFieldDefinition": {
            "properties": {
                "CustomUrl": {
                    "type": "string"
                },
                "Description": {
                    "type": "string"
                },
                "ExtensionXml": {
                    "type": "string"
                },
                "MaxOccurs": {
                    "type": "integer",
                    "format": "int32"
                },
                "MinOccurs": {
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "type": "string"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "ItemFieldDefinitionType",
            "xml": {
                "name": "ItemFieldDefinition"
            },
            "type": "object"
        },
        "ComponentLinkField": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemField"
                },
                {
                    "properties": {
                        "Value": {
                            "$ref": "#/definitions/Component"
                        },
                        "Values": {
                            "items": {
                                "$ref": "#/definitions/Component"
                            },
                            "readOnly": true,
                            "xml": {
                                "name": "Component",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ComponentLinkField"
            },
            "type": "object"
        },
        "DateField": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemField"
                },
                {
                    "properties": {
                        "Value": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "Values": {
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "DateField"
            },
            "type": "object"
        },
        "EmbeddedSchemaField": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemField"
                },
                {
                    "properties": {
                        "Value": {
                            "items": {
                                "$ref": "#/definitions/ItemField"
                            },
                            "xml": {
                                "name": "ItemField",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "Values": {
                            "items": {
                                "items": {
                                    "$ref": "#/definitions/ItemField"
                                },
                                "xml": {
                                    "name": "ItemField",
                                    "wrapped": true
                                },
                                "type": "array"
                            },
                            "xml": {
                                "name": "ItemFields",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "EmbeddedSchemaField"
            },
            "type": "object"
        },
        "ExternalLinkField": {
            "allOf": [
                {
                    "$ref": "#/definitions/TextField"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ExternalLinkField"
            },
            "type": "object"
        },
        "KeywordField": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemField"
                },
                {
                    "properties": {
                        "Value": {
                            "$ref": "#/definitions/Keyword"
                        },
                        "Values": {
                            "items": {
                                "$ref": "#/definitions/Keyword"
                            },
                            "xml": {
                                "name": "Keyword",
                                "wrapped": true
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "KeywordField"
            },
            "type": "object"
        },
        "MultiLineTextField": {
            "allOf": [
                {
                    "$ref": "#/definitions/TextField"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "xml": {
                "name": "MultiLineTextField"
            },
            "type": "object"
        },
        "MultimediaLinkField": {
            "allOf": [
                {
                    "$ref": "#/definitions/ComponentLinkField"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "xml": {
                "name": "MultimediaLinkField"
            },
            "type": "object"
        },
        "NumberField": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemField"
                },
                {
                    "properties": {
                        "Value": {
                            "type": "number",
                            "format": "double"
                        },
                        "Values": {
                            "items": {
                                "type": "number",
                                "format": "double"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "NumberField"
            },
            "type": "object"
        },
        "SingleLineTextField": {
            "allOf": [
                {
                    "$ref": "#/definitions/TextField"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "xml": {
                "name": "SingleLineTextField"
            },
            "type": "object"
        },
        "TextField": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemField"
                },
                {
                    "properties": {
                        "Value": {
                            "type": "string"
                        },
                        "Values": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "TextField"
            },
            "type": "object"
        },
        "XhtmlField": {
            "allOf": [
                {
                    "$ref": "#/definitions/TextField"
                },
                {
                    "properties": {},
                    "type": "object"
                }
            ],
            "xml": {
                "name": "XhtmlField"
            },
            "type": "object"
        },
        "ComponentLinkFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "AllowedTargetSchemas": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "AllowMultimediaLinks": {
                            "type": "boolean"
                        },
                        "DefaultValue": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ComponentLinkFieldDefinition"
            },
            "type": "object"
        },
        "DateListDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ListDefinition"
                },
                {
                    "properties": {
                        "Entries": {
                            "items": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "DateListDefinition"
            },
            "type": "object"
        },
        "DateFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "DefaultValue": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "IsMaxValueExclusive": {
                            "type": "boolean"
                        },
                        "IsMinValueExclusive": {
                            "type": "boolean"
                        },
                        "List": {
                            "$ref": "#/definitions/DateListDefinition"
                        },
                        "MaxValue": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "MinValue": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "Pattern": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "DateFieldDefinition"
            },
            "type": "object"
        },
        "EmbeddedSchemaFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "EmbeddedFields": {
                            "items": {
                                "$ref": "#/definitions/ItemFieldDefinition"
                            },
                            "xml": {
                                "name": "ItemFieldDefinition",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "EmbeddedSchema": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "EmbeddedSchemaFieldDefinition"
            },
            "type": "object"
        },
        "ExternalLinkFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "DefaultValue": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ExternalLinkFieldDefinition"
            },
            "type": "object"
        },
        "ListDefinition": {
            "properties": {
                "Height": {
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "type": "string",
                    "enum": [
                        "UnknownByClient",
                        "None",
                        "Select",
                        "Edit",
                        "Radio",
                        "Checkbox",
                        "Tree"
                    ]
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "ListDefinitionType",
            "xml": {
                "name": "ListDefinition"
            },
            "type": "object"
        },
        "KeywordFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "Category": {
                            "$ref": "#/definitions/Link"
                        },
                        "DefaultValue": {
                            "$ref": "#/definitions/Link"
                        },
                        "List": {
                            "$ref": "#/definitions/ListDefinition"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "KeywordFieldDefinition"
            },
            "type": "object"
        },
        "MultiLineTextFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "DefaultValue": {
                            "type": "string"
                        },
                        "Height": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "MultiLineTextFieldDefinition"
            },
            "type": "object"
        },
        "MultimediaLinkFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "AllowedTargetSchemas": {
                            "items": {
                                "$ref": "#/definitions/Link"
                            },
                            "xml": {
                                "name": "Link",
                                "wrapped": true
                            },
                            "type": "array"
                        },
                        "DefaultValue": {
                            "$ref": "#/definitions/Link"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "MultimediaLinkFieldDefinition"
            },
            "type": "object"
        },
        "NumberListDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ListDefinition"
                },
                {
                    "properties": {
                        "Entries": {
                            "items": {
                                "type": "number",
                                "format": "double"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "NumberListDefinition"
            },
            "type": "object"
        },
        "NumberFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "DefaultValue": {
                            "type": "number",
                            "format": "double"
                        },
                        "FractionDigits": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "IsMaxValueExclusive": {
                            "type": "boolean"
                        },
                        "IsMinValueExclusive": {
                            "type": "boolean"
                        },
                        "List": {
                            "$ref": "#/definitions/NumberListDefinition"
                        },
                        "MaxValue": {
                            "type": "number",
                            "format": "double"
                        },
                        "MinValue": {
                            "type": "number",
                            "format": "double"
                        },
                        "Pattern": {
                            "type": "string"
                        },
                        "TotalDigits": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "NumberFieldDefinition"
            },
            "type": "object"
        },
        "SingleLineTextListDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ListDefinition"
                },
                {
                    "properties": {
                        "Entries": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "SingleLineTextListDefinition"
            },
            "type": "object"
        },
        "SingleLineTextFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "DefaultValue": {
                            "type": "string"
                        },
                        "List": {
                            "$ref": "#/definitions/SingleLineTextListDefinition"
                        },
                        "MaxLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "MinLength": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "Pattern": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "SingleLineTextFieldDefinition"
            },
            "type": "object"
        },
        "FormattingFeatures": {
            "properties": {
                "$type": {
                    "example": "FormattingFeatures",
                    "type": "string"
                },
                "AccessibilityLevel": {
                    "type": "integer",
                    "format": "int32"
                },
                "DisallowedActions": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "DisallowedStyles": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "DocType": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "FormattingFeatures"
            },
            "type": "object"
        },
        "XhtmlFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/ItemFieldDefinition"
                },
                {
                    "properties": {
                        "DefaultValue": {
                            "type": "string"
                        },
                        "FilterXslt": {
                            "type": "string"
                        },
                        "FormattingFeatures": {
                            "$ref": "#/definitions/FormattingFeatures"
                        },
                        "Height": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "XhtmlFieldDefinition"
            },
            "type": "object"
        },
        "ExtendedFieldDefinition": {
            "allOf": [
                {
                    "$ref": "#/definitions/FieldDefinition"
                },
                {
                    "properties": {
                        "$type": {
                            "type": "string"
                        },
                        "ItemFieldDefinition": {
                            "$ref": "#/definitions/ItemFieldDefinition"
                        }
                    },
                    "type": "object"
                }
            ],
            "xml": {
                "name": "ExtendedFieldDefinition"
            },
            "type": "object"
        },
        "VersionedItemRequest": {
            "properties": {
                "UserComment": {
                    "type": "string"
                },
                "discriminator": {
                    "type": "string"
                }
            },
            "discriminator": "VersionedItemRequestType",
            "xml": {
                "name": "VersionedItemRequest"
            },
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "ApplicationData",
            "description": "Provides operations to Create, Read, Update and Delete application data."
        },
        {
            "name": "BatchOperations",
            "description": "Provides operations to perform certain actions on batches of items."
        },
        {
            "name": "Binaries",
            "description": "Provides operations for uploading binaries."
        },
        {
            "name": "Blueprinting",
            "description": "Provides operations for Blueprinting."
        },
        {
            "name": "FastTrackPublishing",
            "description": "Provides operations for Fast Track Publishing"
        },
        {
            "name": "HealthCheck",
            "description": "Provides a healthcheck."
        },
        {
            "name": "Item",
            "description": "Provides operations to Create, Read, Update, Delete and Validate items."
        },
        {
            "name": "Lists",
            "description": "Provides operations to get lists of certain items."
        },
        {
            "name": "OrganizationalItems",
            "description": "Provides operations for OrganizationalItems."
        },
        {
            "name": "Publishing",
            "description": "Provides operations for Publishing."
        },
        {
            "name": "Queues",
            "description": "Provides operations for Queues and Messages."
        },
        {
            "name": "Rendering",
            "description": "Provides operations for rendering and preview."
        },
        {
            "name": "Schemas",
            "description": "Provides Schema related operations."
        },
        {
            "name": "Search",
            "description": "Provides operations for searching and indexing."
        },
        {
            "name": "System",
            "description": "Provides system operations."
        },
        {
            "name": "UserProfile",
            "description": "Provides operations for a User's UserProfile."
        },
        {
            "name": "Versioning",
            "description": "Provides operations for versioned items."
        },
        {
            "name": "Workflow",
            "description": "Provides operations to control Workflow."
        }
    ]
}
