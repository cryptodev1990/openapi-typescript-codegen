export class CancelablePromise<T> extends Promise<T> {

    private readonly _cancel:  (reason?: any) => void;

    constructor(executor: (
        resolve: (value: T | PromiseLike<T>) => void,
        reject: () => void
        cancel: () => void
    ) => void) {
        super(executor);
    }

    public cancel() {
        //
    }
}
