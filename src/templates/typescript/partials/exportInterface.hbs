{{#if description}}
/**
 * {{{description}}}
 */
{{/if}}
export interface {{{name}}}{{#if extends}} extends {{#each extends}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}}{{/if}} {
    {{#each properties}}
    {{#if description}}
    /**
     * {{{description}}}
     */
    {{/if}}
    {{#if isReadOnly}}readonly {{/if}}{{{name}}}{{#unless isRequired}}?{{/unless}}: {{>type parent=../name}}{{#if isNullable}} | null{{/if}};
    {{/each}}
}

export namespace {{{name}}} {

    {{#each enums}}
    {{#if description}}
    /**
     * {{{description}}}
     */
    {{/if}}
    export enum {{{name}}} {
        {{#each enum}}
        {{{name}}} = {{{value}}}{{#unless @last}},{{/unless}}
        {{/each}}
    }

    {{/each}}
    export const schema: yup.ObjectSchema<{{{name}}}> = {{>validation}};

    export async function validate(value: any): Promise<{{{name}}}> {
        return schema.validate(value, { strict: true });
    }

    export function validateSync(value: any): {{{name}}} {
        return schema.validateSync(value, { strict: true });
    }
}
